export declare enum BuildNumberToken {
    LATEST_BUILD_NUMBER_TOKEN = "LATEST",
    NEXT_BUILD_NUMBER_TOKEN = "NEXT",
    RELEASED_BUILD_NUMBER_TOKEN = "RELEASED",
    HIGHEST_VERSION_NUMBER_TOKEN = "HIGHEST",
    NONE_VERSION_NUMBER_TOKEN = "NONE"
}
export declare class VersionNumber {
    major: string | number;
    minor: string | number;
    patch: string | number;
    build: string | number;
    constructor(major: string | number, minor: string | number, patch: string | number, build: string | number);
    /**
     * Separates at major.minor string into {major: Number, minor: Number} object
     *
     * @param versionString a string in the format of major.minor like '3.2'
     */
    static parseMajorMinor(versionString: string): {
        major: number;
        minor: number;
    };
    static from(versionString: string): VersionNumber;
    toString(): string;
    isbuildKeyword(): boolean;
    compareTo(other: VersionNumber): number;
}
