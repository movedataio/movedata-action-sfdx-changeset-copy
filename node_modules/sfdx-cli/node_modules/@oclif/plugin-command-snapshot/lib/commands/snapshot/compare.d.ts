import { SnapshotCommand, SnapshotEntry } from '../../snapshot-command';
interface Change {
    name: string;
    removed?: boolean;
    added?: boolean;
}
type CommandChange = {
    plugin: string;
    flags: Change[];
    alias: Change[];
} & Change;
export type CompareResponse = {
    addedCommands?: string[];
    removedCommands?: string[];
    removedFlags?: string[];
    diffCommands?: CommandChange[];
};
export default class Compare extends SnapshotCommand {
    static flags: {
        filepath: import("@oclif/core/lib/interfaces").OptionFlag<string, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
    };
    /**
     * Compare a snapshot with the current commands
     * @param {CommandChange[]} initialCommands Command list from the snapshot
     * @param {CommandChange[]} updatedCommands Command list from runtime
     * @returns all the command differences
     */
    compareSnapshot(initialCommands: SnapshotEntry[], updatedCommands: CommandChange[]): Promise<CompareResponse>;
    /**
     * @deprecated in favor of diffCommandProperty
   * Compares a flag snapshot with the current command's flags
   * @param {string[]} initialFlags Flag list from the snapshot
   * @param {string[]} updatedFlags Flag list from runtime
   * @return {boolean} true if no changes, false otherwise
   */
    diffCommandFlags(initialFlags: string[], updatedFlags: Change[]): {
        addedFlags: string[];
        removedFlags: string[];
        updatedFlags: Change[];
        changedFlags: Change[];
    };
    /**
   * compares two command's properties to each other
   * @return a list of added, removed, updated, and changed properties
   * @param initial initial command property to compare against
   * @param updated generated command property to compare with
   */
    diffCommandProperty(initial: string[], updated: Change[]): {
        addedProperty: string[];
        removedProperty: string[];
        updated: Change[];
        changedProperty: Change[];
    };
    get changed(): CommandChange[];
    run(): Promise<CompareResponse>;
}
export {};
