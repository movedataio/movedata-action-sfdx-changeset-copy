import { SfCommand } from '@salesforce/sf-plugins-core';
import { Connection } from '@salesforce/core';
type FailureMsg = {
    shapeId: string;
    message: string;
};
type DeleteAllResult = {
    shapeIds: string[];
    failures: FailureMsg[];
};
export interface OrgShapeDeleteResult extends DeleteAllResult {
    orgId: string;
}
export declare class OrgShapeDeleteCommand extends SfCommand<OrgShapeDeleteResult | undefined> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly aliases: string[];
    static readonly deprecateAliases = true;
    static readonly flags: {
        'target-org': import("@oclif/core/lib/interfaces").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'api-version': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        loglevel: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'no-prompt': import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    run(): Promise<OrgShapeDeleteResult | undefined>;
}
/**
 * Delete all ShapeRepresentation records for the shapeOrg.
 *
 * @return List of SR IDs that were deleted
 */
export declare const deleteAll: (conn: Connection, username: string) => Promise<DeleteAllResult>;
export {};
