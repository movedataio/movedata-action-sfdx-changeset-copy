"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapshotGet = void 0;
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
const core_1 = require("@salesforce/core");
const snapshot_1 = require("../../../shared/snapshot");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-signups', 'snapshot.get');
class SnapshotGet extends sf_plugins_core_1.SfCommand {
    async run() {
        const { flags } = await this.parse(SnapshotGet);
        const result = await (0, snapshot_1.queryByNameOrId)(flags['target-dev-hub'].getConnection(flags['api-version']), flags.snapshot);
        if (!this.jsonEnabled()) {
            (0, snapshot_1.printSingleRecordTable)(result);
        }
        return result;
    }
}
exports.SnapshotGet = SnapshotGet;
SnapshotGet.summary = messages.getMessage('summary');
SnapshotGet.description = messages.getMessage('description');
SnapshotGet.examples = messages.getMessages('examples');
SnapshotGet.aliases = ['force:org:snapshot:get'];
SnapshotGet.deprecateAliases = true;
SnapshotGet.flags = {
    'target-dev-hub': sf_plugins_core_1.requiredHubFlagWithDeprecations,
    'api-version': sf_plugins_core_1.orgApiVersionFlagWithDeprecations,
    loglevel: sf_plugins_core_1.loglevel,
    snapshot: sf_plugins_core_1.Flags.string({
        char: 's',
        summary: messages.getMessage('flags.snapshot.summary'),
        description: messages.getMessage('flags.snapshot.description'),
        required: true,
    }),
};
//# sourceMappingURL=snapshot.js.map