"use strict";
/*
 * Copyright (c) 2018, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MainTopicIntro = void 0;
const path_1 = require("path");
const ts_types_1 = require("@salesforce/ts-types");
const utils_1 = require("../utils");
const ditamap_1 = require("./ditamap");
class MainTopicIntro extends ditamap_1.Ditamap {
    constructor(topic, subtopic, subTopicMeta) {
        const filename = ditamap_1.Ditamap.file(`cli_reference_${topic}_${subtopic}`, 'xml');
        let trailblazerCommunityUrl;
        let trailblazerCommunityName;
        if (subTopicMeta.trailblazerCommunityLink) {
            const community = (0, ts_types_1.ensureJsonMap)(subTopicMeta.trailblazerCommunityLink);
            trailblazerCommunityUrl = community.url;
            trailblazerCommunityName = community.name;
        }
        if (!subTopicMeta.longDescription && !subTopicMeta.external) {
            subTopicMeta.longDescription = (0, utils_1.punctuate)((0, ts_types_1.asString)(subTopicMeta.description));
        }
        super(filename, {
            topic: subtopic,
            longDescription: subTopicMeta.longDescription,
            isOpenPilotTopic: subTopicMeta.state === 'openPilot',
            isClosedPilotTopic: subTopicMeta.state === 'closedPilot',
            isBetaTopic: subTopicMeta.state === 'beta',
            trailblazerCommunityUrl,
            trailblazerCommunityName,
        });
        this.destination = (0, path_1.join)(ditamap_1.Ditamap.outputDir, topic, filename);
    }
    getTemplateFileName() {
        return 'main_topic_intro.hbs';
    }
}
exports.MainTopicIntro = MainTopicIntro;
//# sourceMappingURL=main-topic-intro.js.map