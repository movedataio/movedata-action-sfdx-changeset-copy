"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSecondsToHuman = exports.getTimeComponentsFromSeconds = exports.getClockForSeconds = void 0;
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const kit_1 = require("@salesforce/kit");
const getClockForSeconds = (timeInSec) => {
    const tc = (0, exports.getTimeComponentsFromSeconds)(timeInSec);
    const dDisplay = tc.days.days > 0 ? `${tc.days.days.toString()}:` : '';
    const hDisplay = tc.hours.hours.toString().padStart(2, '0');
    const mDisplay = tc.minutes.minutes.toString().padStart(2, '0');
    const sDisplay = tc.seconds.seconds.toString().padStart(2, '0');
    return `${dDisplay}${hDisplay}:${mDisplay}:${sDisplay}`;
};
exports.getClockForSeconds = getClockForSeconds;
const getTimeComponentsFromSeconds = (timeInSec) => {
    const days = kit_1.Duration.days(Math.floor(timeInSec / 86400));
    const hours = kit_1.Duration.hours(Math.floor((timeInSec % 86400) / 3600));
    const minutes = kit_1.Duration.minutes(Math.floor((timeInSec % 3600) / 60));
    const seconds = kit_1.Duration.seconds(Math.floor(timeInSec % 60));
    return { days, hours, minutes, seconds };
};
exports.getTimeComponentsFromSeconds = getTimeComponentsFromSeconds;
const getSecondsToHuman = (timeInSec) => {
    const tc = (0, exports.getTimeComponentsFromSeconds)(timeInSec);
    const dDisplay = tc.days.days > 0 ? tc.days.toString() + ' ' : '';
    const hDisplay = tc.hours.hours > 0 ? tc.hours.toString() + ' ' : '';
    const mDisplay = tc.minutes.minutes > 0 ? tc.minutes.toString() + ' ' : '';
    const sDisplay = tc.seconds.seconds > 0 ? tc.seconds.toString() : '';
    return (dDisplay + hDisplay + mDisplay + sDisplay).trim();
};
exports.getSecondsToHuman = getSecondsToHuman;
//# sourceMappingURL=timeUtils.js.map