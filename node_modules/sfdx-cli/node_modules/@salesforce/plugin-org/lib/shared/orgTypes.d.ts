import { AuthFields, ScratchOrgInfo } from '@salesforce/core';
import { Dictionary } from '@salesforce/ts-types';
export type OrgDisplayReturn = Partial<ScratchOrgFields> & {
    username: string;
    id: string;
    accessToken: string;
    instanceUrl: string;
    clientId: string;
    apiVersion?: string;
    alias?: string;
    password?: string;
    connectedStatus?: string;
    sfdxAuthUrl?: string;
};
/** Convenience type for the fields that are in the auth file
 *
 * core's AuthFields has everything as optional.
 *
 * In this case, we have a username because these come from auth files */
export type AuthFieldsFromFS = Omit<AuthFields, 'expirationDate'> & {
    username: string;
    orgId: string;
    accessToken: string;
    instanceUrl: string;
    clientId: string;
    string: string;
};
export type ExtendedAuthFields = AuthFieldsFromFS & OrgListFields;
export type ExtendedAuthFieldsScratch = ExtendedAuthFields & {
    expirationDate: string;
    devHubUsername: string;
    devHubOrgId?: string;
};
export type FullyPopulatedScratchOrgFields = ScratchOrgFields & ExtendedAuthFieldsScratch & {
    isExpired: boolean;
};
export interface ScratchOrgInfoSObject {
    Id: string;
    CreatedDate: string;
    Status: 'New' | 'Deleted' | 'Active' | 'Error';
    ExpirationDate: string;
    CreatedBy: {
        Username: string;
    };
    Edition: string;
    Namespace?: string;
    OrgName: string;
    SignupUsername: string;
}
/** fields in the  */
export interface ScratchOrgFields {
    createdBy: string;
    createdDate: string;
    expirationDate: string;
    orgName: string;
    status: string;
    devHubId: string;
    edition?: string;
    namespace?: string;
    snapshot?: string;
    lastUsed?: Date;
    signupUsername: string;
}
export interface OrgListFields {
    connectedStatus?: string;
    isDefaultUsername?: boolean;
    isDefaultDevHubUsername?: boolean;
    defaultMarker?: '(D)' | '(U)';
    attributes?: Dictionary<unknown>;
    lastUsed?: Date;
}
/** If the scratch org is resumed, but doesn't get very far in the process, it won't have much information on it */
export interface ScratchCreateResponse {
    username?: string;
    scratchOrgInfo?: ScratchOrgInfo;
    authFields?: AuthFields;
    warnings: string[];
    orgId?: string;
}
