import { SfCommand } from '@salesforce/sf-plugins-core';
import { Interfaces } from '@oclif/core';
import { ExtendedAuthFields, FullyPopulatedScratchOrgFields } from '../../shared/orgTypes';
export type OrgListResult = {
    nonScratchOrgs: ExtendedAuthFields[];
    scratchOrgs: FullyPopulatedScratchOrgFields[];
};
export declare class OrgListCommand extends SfCommand<OrgListResult> {
    static readonly summary: string;
    static readonly examples: string[];
    static aliases: string[];
    static deprecateAliases: boolean;
    static readonly flags: {
        verbose: Interfaces.BooleanFlag<boolean>;
        all: Interfaces.BooleanFlag<boolean>;
        clean: Interfaces.BooleanFlag<boolean>;
        'no-prompt': Interfaces.BooleanFlag<boolean>;
        'skip-connection-status': Interfaces.BooleanFlag<boolean>;
        loglevel: Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
    };
    private flags;
    run(): Promise<OrgListResult>;
    protected cleanScratchOrgs(scratchOrgs: ExtendedAuthFields[], prompt?: boolean): Promise<void>;
    protected printOrgTable(nonScratchOrgs: ExtendedAuthFields[], skipconnectionstatus: boolean): void;
    private printScratchOrgTable;
}
