{
  "version": "2.6.12",
  "commands": {
    "org:display": {
      "id": "org:display",
      "summary": "Display information about an org.",
      "description": "Output includes your access token, client Id, connected status, org ID, instance URL, username, and alias, if applicable.\n\nUse --verbose to include the SFDX auth URL. WARNING: The SFDX auth URL contains sensitive information, such as a refresh token that can be used to access an org. Don't share or distribute this URL or token.\n\nIncluding --verbose displays the sfdxAuthUrl property only if you authenticated to the org using auth:web:login (not auth:jwt:grant).",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "force:org:display"
      ],
      "examples": [
        "Display information about your default org:\n$ <%= config.bin %> <%= command.id %>",
        "Display information, including the sfdxAuthUrl property, about the org with alias TestOrg1:\n$ <%= config.bin %> <%= command.id %> --target-org TestOrg1 --verbose"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "Display the sfdxAuthUrl property.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:list": {
      "id": "org:list",
      "summary": "List all orgs you’ve created or authenticated to.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "force:org:list"
      ],
      "examples": [
        "List all orgs you've created or authenticated to:\n$ <%= config.bin %> <%= command.id %>",
        "List all orgs, including expired, deleted, and unknown-status orgs; don't include the connection status:\n$ <%= config.bin %> <%= command.id %> --skip-connection-status --all",
        "List orgs and remove local org authorization info about non-active scratch orgs:\n$ <%= config.bin %> <%= command.id %> --clean"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "List more information about each org.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "all": {
          "name": "all",
          "type": "boolean",
          "summary": "Include expired, deleted, and unknown-status scratch orgs.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "clean": {
          "name": "clean",
          "type": "boolean",
          "summary": "Remove all local org authorizations for non-active scratch orgs. Use auth:logout to remove non-scratch orgs.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "char": "p",
          "summary": "Don't prompt for confirmation.",
          "allowNo": false,
          "dependsOn": [
            "clean"
          ],
          "deprecateAliases": true,
          "aliases": [
            "noprompt"
          ]
        },
        "skip-connection-status": {
          "name": "skip-connection-status",
          "type": "boolean",
          "summary": "Skip retrieving the connection status of non-scratch orgs.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "skipconnectionstatus"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "org:open": {
      "id": "org:open",
      "summary": "Open your default scratch org, or another specified org, in a browser.",
      "description": "To open a specific page, specify the portion of the URL after \"https://MyDomainName.my.salesforce.com/\" as the value for the --path flag. For example, specify \"--path lightning\" to open Lightning Experience, or specify \"--path /apex/YourPage\" to open a Visualforce page.\n\nUse the --source-file to open a Lightning Page from your local project in Lightning App Builder. Lightning page files have the suffix .flexipage-meta.xml, and are stored in the \"flexipages\" directory.\n\nTo generate a URL but not launch it in your browser, specify --url-only.\n\nTo open in a specific browser, use the --browser flag. Supported browsers are \"chrome\", \"edge\", and \"firefox\". If you don't specify --browser, the org opens in your default browser.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "force:org:open",
        "force:source:open"
      ],
      "examples": [
        "Open your default org in your default browser:\n$ <%= config.bin %> <%= command.id %>",
        "Open the org with alias MyTestOrg1 in the Firefox browser:\n$ <%= config.bin %> <%= command.id %> --target-org MyTestOrg1 --browser firefox",
        "Display the navigation URL for the Lightning Experience page for your default org, but don't open the page in a browser:\n$ <%= config.bin %> <%= command.id %> --url-only --path lightning",
        "Open a local Lightning page in your default org's Lightning App Builder:\n$ <%= config.bin %> <%= command.id %> --source-path force-app/main/default/flexipages/Hello.flexipage-meta.xml"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "browser": {
          "name": "browser",
          "type": "option",
          "char": "b",
          "summary": "Browser where the org opens.",
          "multiple": false,
          "options": [
            "chrome",
            "edge",
            "firefox"
          ],
          "exclusive": [
            "url-only"
          ],
          "deprecateAliases": true
        },
        "path": {
          "name": "path",
          "type": "option",
          "char": "p",
          "summary": "Navigation URL path to open a specific page.",
          "multiple": false,
          "exclusive": [
            "source-file"
          ],
          "deprecateAliases": true
        },
        "url-only": {
          "name": "url-only",
          "type": "boolean",
          "char": "r",
          "summary": "Display navigation URL, but don’t launch browser.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "urlonly"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "source-file": {
          "name": "source-file",
          "type": "option",
          "char": "f",
          "summary": "Path to an ApexPage or FlexiPage to open in Lightning App Builder.",
          "multiple": false,
          "exclusive": [
            "path"
          ],
          "deprecateAliases": true,
          "aliases": [
            "sourcefile"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "force:org:clone": {
      "id": "force:org:clone",
      "summary": "Clone a sandbox org.",
      "description": "There are two ways to clone a sandbox: either specify a sandbox definition file or provide key=value pairs at the command line. Key-value pairs at the command-line override their equivalent sandbox definition file values. In either case, you must specify both the \"SandboxName\" and \"SourceSandboxName\" options to set the names of the new sandbox and the one being cloned, respectively.\n\nSet the --targetusername (-u) parameter to a production org with sandbox licenses. The --type (-t) parameter is required and must be set to \"sandbox\".",
      "strict": false,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "state": "deprecated",
      "aliases": [],
      "examples": [
        "$ <%= config.bin %> <%= command.id %> -t sandbox -f config/dev-sandbox-def.json -u prodOrg -a MyDevSandbox",
        "$ <%= config.bin %> <%= command.id %> -t sandbox SandboxName=NewClonedSandbox SourceSandboxName=ExistingSandbox -u prodOrg -a MyDevSandbox"
      ],
      "deprecationOptions": {
        "to": "org:create:sandbox",
        "version": "60.0"
      },
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "aliases": [
            "apiversion"
          ]
        },
        "type": {
          "name": "type",
          "type": "option",
          "char": "t",
          "summary": "Type of org to create.",
          "required": true,
          "multiple": false,
          "options": [
            "sandbox"
          ]
        },
        "definitionfile": {
          "name": "definitionfile",
          "type": "option",
          "char": "f",
          "summary": "Path to the sandbox definition file.",
          "multiple": false
        },
        "setdefaultusername": {
          "name": "setdefaultusername",
          "type": "boolean",
          "char": "s",
          "summary": "Set the cloned org as your default.",
          "allowNo": false
        },
        "setalias": {
          "name": "setalias",
          "type": "option",
          "char": "a",
          "summary": "Alias for the cloned org.",
          "multiple": false
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Number of minutes to wait while polling for status.",
          "description": "Sets the streaming client socket timeout, in minutes. If the streaming client socket has no contact from the server for a number of minutes, the client exits. Specify a longer wait time if timeouts occur frequently.",
          "multiple": false
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          }
        }
      },
      "args": {},
      "SANDBOXDEF_SRC_SANDBOXNAME": "SourceSandboxName",
      "hasDynamicHelp": true
    },
    "force:org:create": {
      "id": "force:org:create",
      "summary": "Create a scratch org or sandbox.",
      "description": "Creates a scratch org or a sandbox org using the values specified in a configuration file or key=value pairs that you specify on the command line. Values specified on the command line override values in the configuration file. Specify a configuration file or provide key=value pairs while creating a scratch org or a sandbox. When creating scratch orgs, —targetdevhubusername (-v) must be a Dev Hub org. When creating sandboxes, the --targetusername (-u) must be a production org with sandbox licenses. The —type (-t) is required if creating a sandbox.",
      "strict": false,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "$ <%= config.bin %> <%= command.id %> -f config/enterprise-scratch-def.json -a MyScratchOrg",
        "$ <%= config.bin %> <%= command.id %> edition=Developer -a MyScratchOrg -s -v devHub",
        "$ <%= config.bin %> <%= command.id %> -f config/enterprise-scratch-def.json -a ScratchOrgWithOverrides username=testuser1@mycompany.org",
        "$ <%= config.bin %> <%= command.id %> -t sandbox -f config/dev-sandbox-def.json -a MyDevSandbox -u prodOrg"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the production org that contains the sandbox license.",
          "multiple": false,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": false,
          "multiple": false,
          "aliases": [
            "targetdevhubusername"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          }
        },
        "type": {
          "name": "type",
          "type": "option",
          "char": "t",
          "summary": "Type of org to create.",
          "multiple": false,
          "options": [
            "scratch",
            "sandbox"
          ],
          "default": "scratch"
        },
        "definitionfile": {
          "name": "definitionfile",
          "type": "option",
          "char": "f",
          "summary": "Path to an org definition file.",
          "multiple": false
        },
        "nonamespace": {
          "name": "nonamespace",
          "type": "boolean",
          "char": "n",
          "summary": "Create the scratch org with no namespace.",
          "allowNo": false
        },
        "noancestors": {
          "name": "noancestors",
          "type": "boolean",
          "char": "c",
          "summary": "Do not include second-generation package ancestors in the scratch org.",
          "allowNo": false
        },
        "clientid": {
          "name": "clientid",
          "type": "option",
          "char": "i",
          "summary": "Connected app consumer key; not supported for sandbox org creation.",
          "multiple": false
        },
        "setdefaultusername": {
          "name": "setdefaultusername",
          "type": "boolean",
          "char": "s",
          "summary": "Set the created org as the default username.",
          "allowNo": false
        },
        "setalias": {
          "name": "setalias",
          "type": "option",
          "char": "a",
          "summary": "Alias for the created org.",
          "multiple": false
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Streaming client socket timeout (in minutes).",
          "multiple": false
        },
        "durationdays": {
          "name": "durationdays",
          "type": "option",
          "char": "d",
          "summary": "Duration of the scratch org (in days) (default:7, min:1, max:30).",
          "multiple": false,
          "default": 7
        },
        "retry": {
          "name": "retry",
          "type": "option",
          "summary": "Number of scratch org auth retries after scratch org is successfully signed up.",
          "hidden": true,
          "multiple": false,
          "default": 0
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "force:org:delete": {
      "id": "force:org:delete",
      "summary": "Delete a scratch or sandbox org.",
      "description": "Salesforce CLI marks the org for deletion in either the Dev Hub org (for scratch orgs) or production org (for sandboxes)\nand then deletes all local references to the org from your computer.\n\nTo mark the org for deletion without being prompted to confirm, specify --noprompt.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "state": "deprecated",
      "aliases": [],
      "examples": [
        "$ <%= config.bin %> <%= command.id %> -u me@my.org",
        "$ <%= config.bin %> <%= command.id %> -u MyOrgAlias -p"
      ],
      "deprecationOptions": {
        "message": "The force:org:delete command is deprecated. Use org:delete:scratch or org:delete:sandbox."
      },
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "targetdevhubusername": {
          "name": "targetdevhubusername",
          "type": "option",
          "char": "v",
          "summary": "The targetdevhubusername flag exists only for backwards compatibility. It is not necessary and has no effect.",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "version": "58.0",
            "message": "The targetdevhubusername flag exists only for backwards compatibility. It is not necessary and has no effect."
          }
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "aliases": [
            "apiversion"
          ]
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "char": "p",
          "summary": "No prompt to confirm deletion.",
          "allowNo": false,
          "aliases": [
            "noprompt"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          }
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "force:org:status": {
      "id": "force:org:status",
      "summary": "Check the status of a sandbox, and if complete, authenticate to it.",
      "description": "Use this command to check the status of your sandbox creation or clone and, if the sandbox is ready, authenticate to it.\n\nUse the --wait (-w) parameter to specify the number of minutes that the command waits for the sandbox creation or clone to complete before returning control of the terminal to you.\n\nSet the --target-org (-o) parameter to the username or alias of the production org that contains the sandbox license.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "state": "deprecated",
      "aliases": [],
      "examples": [
        "$ <%= config.bin %> <%= command.id %> --sandboxname DevSbx1 --setalias MySandbox -u prodOrg",
        "$ <%= config.bin %> <%= command.id %> --sandboxname DevSbx1 --wait 45 --setdefaultusername -u prodOrg"
      ],
      "deprecationOptions": {
        "to": "org:resume:sandbox",
        "version": "60.0"
      },
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "aliases": [
            "apiversion"
          ]
        },
        "sandboxname": {
          "name": "sandboxname",
          "type": "option",
          "char": "n",
          "summary": "Name of the sandbox org to check status for.",
          "required": true,
          "multiple": false
        },
        "setdefaultusername": {
          "name": "setdefaultusername",
          "type": "boolean",
          "char": "s",
          "summary": "Set the created or cloned org as your default.",
          "allowNo": false
        },
        "setalias": {
          "name": "setalias",
          "type": "option",
          "char": "a",
          "summary": "Alias for the created or cloned org.",
          "multiple": false
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Number of minutes to wait while polling for status.",
          "multiple": false
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          }
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:create:sandbox": {
      "id": "org:create:sandbox",
      "summary": "Create a sandbox org.",
      "description": "There are two ways to create a sandbox org: specify a definition file that contains the sandbox options or use the --name and --license-type flags to specify the two required options. If you want to set an option other than name or license type, such as apexClassId, you must use a definition file.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "env:create:sandbox"
      ],
      "examples": [
        "Create a sandbox org using a definition file and give it the alias \"MyDevSandbox\". The production org that contains the sandbox license has the alias \"prodOrg\".\n<%= config.bin %> <%= command.id %> -f config/dev-sandbox-def.json --alias MyDevSandbox --target-org prodOrg",
        "Create a sandbox org by directly specifying its name and type of license (Developer) instead of using a definition file. Set the sandbox org as your default.\n<%= config.bin %> <%= command.id %> --name mysandbox --license-type Developer --alias MyDevSandbox --target-org prodOrg --set-default"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "definition-file": {
          "name": "definition-file",
          "type": "option",
          "char": "f",
          "summary": "Path to a sandbox definition file.",
          "description": "The sandbox definition file is a blueprint for the sandbox. You can create different definition files for each sandbox type that you use in the development process. See <https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_sandbox_definition.htm> for all the options you can specify in the defintion file.",
          "multiple": false,
          "exclusive": [
            "name",
            "license-type"
          ],
          "deprecateAliases": true
        },
        "set-default": {
          "name": "set-default",
          "type": "boolean",
          "char": "s",
          "summary": "Set the sandbox org as your default org.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "alias": {
          "name": "alias",
          "type": "option",
          "char": "a",
          "summary": "Alias for the sandbox org.",
          "description": "When you create a sandbox, the generated usernames are based on the usernames present in the production org. To ensure uniqueness, the new usernames are appended with the name of the sandbox. For example, the username \"user@example.com\" in the production org results in the username \"user@example.com.mysandbox\" in a sandbox named \"mysandbox\". When you set an alias for a sandbox org, it's assigned to the resulting username of the user running this command.",
          "multiple": false,
          "deprecateAliases": true
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Number of minutes to wait for the sandbox org to be ready.",
          "description": "If the command continues to run after the wait period, the CLI returns control of the terminal to you and displays the \"<%= config.bin %> org resume sandbox\" command you run to check the status of the create. The displayed command includes the job ID for the running sandbox creation.",
          "helpValue": "<minutes>",
          "multiple": false,
          "exclusive": [
            "async"
          ],
          "deprecateAliases": true
        },
        "poll-interval": {
          "name": "poll-interval",
          "type": "option",
          "char": "i",
          "summary": "Number of seconds to wait between retries.",
          "helpValue": "<seconds>",
          "multiple": false,
          "exclusive": [
            "async"
          ],
          "deprecateAliases": true
        },
        "async": {
          "name": "async",
          "type": "boolean",
          "summary": "Request the sandbox creation, but don't wait for it to complete.",
          "description": "The command immediately displays the job ID and returns control of the terminal to you. This way, you can continue to use the CLI. To check the status of the sandbox creation, run \"<%= config.bin %> org resume sandbox\".",
          "allowNo": false,
          "exclusive": [
            "wait",
            "poll-interval"
          ],
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the sandbox org.",
          "description": "The name must be a unique alphanumeric string (10 or fewer characters) to identify the sandbox. You can’t reuse a name while a sandbox is in the process of being deleted.",
          "multiple": false,
          "exclusive": [
            "definition-file"
          ],
          "deprecateAliases": true
        },
        "clone": {
          "name": "clone",
          "type": "option",
          "char": "c",
          "summary": "Name of the sandbox org to clone.",
          "description": "The value of clone must be an existing sandbox in the same target-org.",
          "multiple": false,
          "exclusive": [
            "license-type"
          ],
          "deprecateAliases": true
        },
        "license-type": {
          "name": "license-type",
          "type": "option",
          "char": "l",
          "summary": "Type of sandbox license.",
          "multiple": false,
          "options": [
            "Developer",
            "Developer_Pro",
            "Partial",
            "Full"
          ],
          "exclusive": [
            "definition-file",
            "clone"
          ],
          "default": "Developer",
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the production org that contains the sandbox license.",
          "description": "When it creates the sandbox org, Salesforce copies the metadata, and optionally data, from your production org to the new sandbox org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "summary": "Don't prompt for confirmation about the sandbox configuration.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "no-track-source": {
          "name": "no-track-source",
          "type": "boolean",
          "summary": "Do not use source tracking for this sandbox.",
          "description": "We recommend you enable source tracking in Developer and Developer Pro sandbox, which is why it's the default behavior. Source tracking allows you to track the changes you make to your metadata, both in your local project and in the sandbox, and to detect any conflicts between the two.\n\nTo disable source tracking in the new sandbox, specify the --no-track-source flag. The main reason to disable source tracking is for performance. For example, while you probably want to deploy metadata and run Apex tests in your CI/CD jobs, you probably don't want to incur the costs of source tracking (checking for conflicts, polling the SourceMember object, various file system operations.) This is a good use case for disabling source tracking in the sandbox.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:create:scratch": {
      "id": "org:create:scratch",
      "summary": "Create a scratch org.",
      "description": "There are two ways to create a scratch org: specify a definition file that contains the options or use the --edition flag to specify the one required option. If you want to set options other than the edition, such as org features or settings, you must use a definition file.\n\nYou must specify a Dev Hub to create a scratch org, either with the --target-dev-hub flag or by setting your default Dev Hub with the target-dev-hub configuration variable.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "env:create:scratch"
      ],
      "examples": [
        "Create a Developer edition scratch org using your default Dev Hub and give the scratch org an alias:\n<%= config.bin %> <%= command.id %> --edition=developer --alias my-scratch-org",
        "Specify the Dev Hub using its alias and a scratch org definition file. Set the scratch org as your default and specify that it expires in 3 days:\n<%= config.bin %> <%= command.id %> --target-dev-hub=MyHub --definition-file config/project-scratch-def.json --set-default --duration-days 3"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "alias": {
          "name": "alias",
          "type": "option",
          "char": "a",
          "summary": "Alias for the scratch org.",
          "description": "New scratch orgs include one administrator by default. The admin user's username is auto-generated and looks something like test-wvkpnfm5z113@example.com. When you set an alias for a new scratch org, it's assigned this username.",
          "multiple": false,
          "deprecateAliases": true
        },
        "async": {
          "name": "async",
          "type": "boolean",
          "summary": "Request the org, but don't wait for it to complete.",
          "description": "The command immediately displays the job ID and returns control of the terminal to you. This way, you can continue to use the CLI. To resume the scratch org creation, run \"<%= config.bin %> org resume scratch\".",
          "allowNo": false,
          "deprecateAliases": true
        },
        "set-default": {
          "name": "set-default",
          "type": "boolean",
          "char": "d",
          "summary": "Set the scratch org as your default org",
          "allowNo": false,
          "deprecateAliases": true
        },
        "definition-file": {
          "name": "definition-file",
          "type": "option",
          "char": "f",
          "summary": "Path to a scratch org definition file.",
          "description": "The scratch org definition file is a blueprint for the scratch org. It mimics the shape of an org that you use in the development life cycle, such as acceptance testing, packaging, or production. See <https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_def_file.htm> for all the option you can specify in the definition file.",
          "multiple": false,
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "description": "Overrides the value of the target-dev-hub configuration variable, if set.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "no-ancestors": {
          "name": "no-ancestors",
          "type": "boolean",
          "char": "c",
          "summary": "Don't include second-generation managed package (2GP) ancestors in the scratch org.",
          "helpGroup": "Packaging",
          "allowNo": false,
          "deprecateAliases": true
        },
        "edition": {
          "name": "edition",
          "type": "option",
          "char": "e",
          "summary": "Salesforce edition of the scratch org.",
          "description": "The editions that begin with \"partner-\" are available only if the Dev Hub org is a Partner Business Org.",
          "multiple": false,
          "options": [
            "developer",
            "enterprise",
            "group",
            "professional",
            "partner-developer",
            "partner-enterprise",
            "partner-group",
            "partner-professional"
          ],
          "deprecateAliases": true
        },
        "no-namespace": {
          "name": "no-namespace",
          "type": "boolean",
          "char": "m",
          "summary": "Create the scratch org with no namespace, even if the Dev Hub has a namespace.",
          "helpGroup": "Packaging",
          "allowNo": false,
          "deprecateAliases": true
        },
        "duration-days": {
          "name": "duration-days",
          "type": "option",
          "char": "y",
          "summary": "Number of days before the org expires.",
          "helpValue": "<days>",
          "multiple": false,
          "deprecateAliases": true
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Number of minutes to wait for the scratch org to be ready.",
          "description": "If the command continues to run after the wait period, the CLI returns control of the terminal to you and displays the job ID. To resume the scratch org creation, run the org resume scratch command and pass it the job ID.",
          "helpValue": "<minutes>",
          "multiple": false,
          "deprecateAliases": true
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true
        },
        "client-id": {
          "name": "client-id",
          "type": "option",
          "char": "i",
          "summary": "Consumer key of the Dev Hub connected app.",
          "multiple": false,
          "deprecateAliases": true
        },
        "track-source": {
          "name": "track-source",
          "type": "boolean",
          "char": "t",
          "summary": "Use source tracking for this scratch org. Set --no-track-source to disable source tracking.",
          "description": "We recommend you enable source tracking in scratch orgs, which is why it's the default behavior. Source tracking allows you to track the changes you make to your metadata, both in your local project and in the scratch org, and to detect any conflicts between the two.\n\nTo disable source tracking in the new scratch org, specify the --no-track-source flag. The main reason to disable source tracking is for performance. For example, while you probably want to deploy metadata and run Apex tests in your CI/CD jobs, you probably don't want to incur the costs of source tracking (checking for conflicts, polling the SourceMember object, various file system operations.) This is a good use case for disabling source tracking in the scratch org.",
          "allowNo": true,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:delete:sandbox": {
      "id": "org:delete:sandbox",
      "summary": "Delete a sandbox.",
      "description": "Salesforce CLI marks the org for deletion in the production org that contains the sandbox licenses and then deletes all local references to the org from your computer.\nSpecify a sandbox with either the username you used when you logged into it, or the alias you gave the sandbox when you created it. Run \"<%= config.bin %> org list\" to view all your orgs, including sandboxes, and their aliases.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "env:delete:sandbox"
      ],
      "examples": [
        "Delete a sandbox with alias my-sandbox:\n<%= config.bin %> <%= command.id %> --target-org=my-sandbox",
        "Specify a username instead of an alias:\n<%= config.bin %> <%= command.id %> --target-org=myusername@example.com.qa",
        "Delete the sandbox without prompting to confirm :\n<%= config.bin %> <%= command.id %> --target-org=my-sandbox --no-prompt"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Sandbox alias or login user.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "char": "p",
          "summary": "Don't prompt the user to confirm the deletion.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:delete:scratch": {
      "id": "org:delete:scratch",
      "summary": "Delete a scratch org.",
      "description": "Salesforce CLI marks the org for deletion in the Dev Hub org and then deletes all local references to the org from your computer.\nSpecify a scratch org with either the username or the alias you gave the scratch org when you created it. Run \"<%= config.bin %> org list\" to view all your orgs, including scratch orgs, and their aliases.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "env:delete:scratch"
      ],
      "examples": [
        "Delete a scratch org with alias my-scratch-org:\n<%= config.bin %> <%= command.id %> --target-org=my-scratch-org",
        "Specify a username instead of an alias:\n<%= config.bin %> <%= command.id %> --target-org=test-123456-abcdefg@example.com",
        "Delete the scratch org without prompting to confirm :\n<%= config.bin %> <%= command.id %> --target-org=my-scratch-org --no-prompt"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Scratch org alias or login user.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "char": "p",
          "summary": "Don't prompt the user to confirm the deletion.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:list:metadata-types": {
      "id": "org:list:metadata-types",
      "summary": "Display details about the metadata types that are enabled for your org.",
      "description": "The information includes Apex classes and triggers, custom objects, custom fields on standard objects, tab sets that define an app, and many other metadata types. Use this information to identify the syntax needed for a <name> element in a manifest file (package.xml).\n\nThe username that you use to connect to the org must have the Modify All Data or Modify Metadata Through Metadata API Functions permission.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "force:mdapi:describemetadata"
      ],
      "examples": [
        "Display information about all known and enabled metadata types in the org with alias \"my-dev-org\" using API version 57.0:\n$ <%= config.bin %> <%= command.id %> --api-version 57.0 --target-org my-dev-org",
        "Display only the metadata types that aren't yet supported by Salesforce CLI in your default org and write the results to the specified file:\n$ <%= config.bin %> <%= command.id %> --output-file /path/to/outputfilename.txt --filter-known"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "summary": "API version to use; default is the most recent API version.",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion",
            "a"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "output-file": {
          "name": "output-file",
          "type": "option",
          "char": "f",
          "summary": "Pathname of the file in which to write the results.",
          "description": "Directing the output to a file makes it easier to extract relevant information for your package.xml manifest file. The default output destination is the terminal or command window console.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "resultfile"
          ]
        },
        "filter-known": {
          "name": "filter-known",
          "type": "boolean",
          "char": "k",
          "summary": "Filter the known metadata types from the result to display only the types not yet fully supported by Salesforce CLI.\n\nfilter metadata known by the CLI",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "filterknown"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:list:metadata": {
      "id": "org:list:metadata",
      "summary": "List the metadata components and properties of a specified type.",
      "description": "Use this command to identify individual components in your manifest file or if you want a high-level view of particular metadata types in your org. For example, you can use this command to return a list of names of all the CustomObject or Layout components in your org, then use this information in a retrieve command that returns a subset of these components.\n\nThe username that you use to connect to the org must have the Modify All Data or Modify Metadata Through Metadata API Functions permission.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "force:mdapi:listmetadata"
      ],
      "examples": [
        "List the CustomObject components, and their properties, in the org with alias \"my-dev-org\":\n$ <%= config.bin %> <%= command.id %> --metadata-type CustomObject --target-org my-dev-org",
        "List the CustomObject components in your default org, write the output to the specified file, and use API version 57.0:\n$ <%= config.bin %> <%= command.id %> --metadata-type CustomObject --api-version 57.0 --output-file /path/to/outputfilename.txt",
        "List the Dashboard components in your default org that are contained in the \"folderSales\" folder, write the output to the specified file, and use API version 57.0:\n$ <%= config.bin %> <%= command.id %> --metadata-type Dashboard --folder folderSales --api-version 57.0 --output-file /path/to/outputfilename.txt"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "summary": "API version to use; default is the most recent API version.",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion",
            "a"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "output-file": {
          "name": "output-file",
          "type": "option",
          "char": "f",
          "summary": "Pathname of the file in which to write the results.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "resultfile"
          ]
        },
        "metadata-type": {
          "name": "metadata-type",
          "type": "option",
          "char": "m",
          "summary": "Metadata type to be retrieved, such as CustomObject; metadata type names are case-sensitive.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "metadatatype"
          ]
        },
        "folder": {
          "name": "folder",
          "type": "option",
          "summary": "Folder associated with the component; required for components that use folders; folder names are case-sensitive.",
          "description": "Examples of metadata types that use folders are Dashboard, Document, EmailTemplate, and Report.",
          "multiple": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:resume:sandbox": {
      "id": "org:resume:sandbox",
      "summary": "Check the status of a sandbox creation, and log in to it if it's ready.",
      "description": "Sandbox creation can take a long time. If the original \"<%= config.bin %> org create sandbox\" command either times out, or you specified the --async flag, the command displays a job ID. Use this job ID to check whether the sandbox creation is complete, and if it is, the command then logs into it.\n\nYou can also use the sandbox name to check the status or the --use-most-recent flag to use the job ID of the most recent sandbox creation.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "env:resume:sandbox"
      ],
      "examples": [
        "Check the status of a sandbox creation using its name and specify a production org with alias \"prodOrg\":\n<%= config.bin %> <%= command.id %> --name mysandbox --target-org prodOrg",
        "Check the status using the job ID:\n<%= config.bin %> <%= command.id %> --job-id 0GRxxxxxxxx",
        "Check the status of the most recent sandbox create request:\n<%= config.bin %> <%= command.id %> --use-most-recent"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Number of minutes to wait for the sandbox org to be ready.",
          "description": "If the command continues to run after the wait period, the CLI returns control of the terminal window to you and returns the job ID. To resume checking the sandbox creation, rerun this command.",
          "helpValue": "<minutes>",
          "multiple": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the sandbox org.",
          "multiple": false,
          "exclusive": [
            "job-id"
          ],
          "deprecateAliases": true
        },
        "job-id": {
          "name": "job-id",
          "type": "option",
          "char": "i",
          "summary": "Job ID of the incomplete sandbox creation that you want to check the status of.",
          "description": "The job ID is valid for 24 hours after you start the sandbox creation.",
          "multiple": false,
          "exclusive": [
            "name"
          ],
          "deprecateAliases": true
        },
        "use-most-recent": {
          "name": "use-most-recent",
          "type": "boolean",
          "char": "l",
          "summary": "Use the most recent sandbox create request.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the production org that contains the sandbox license.",
          "description": "When it creates the sandbox org, Salesforce copies the metadata, and optionally data, from your production org to the new sandbox org.",
          "multiple": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:resume:scratch": {
      "id": "org:resume:scratch",
      "summary": "Resume the creation of an incomplete scratch org.",
      "description": "When the original \"<%= config.bin %> org create scratch\" command either times out or is run with the --async flag, it displays a job ID.\n\nRun this command by either passing it a job ID or using the --use-most-recent flag to specify the most recent incomplete scratch org.",
      "strict": true,
      "pluginName": "@salesforce/plugin-org",
      "pluginAlias": "@salesforce/plugin-org",
      "pluginType": "core",
      "aliases": [
        "env:resume:scratch"
      ],
      "examples": [
        "Resume a scratch org create with a job ID:\n<%= config.bin %> <%= command.id %> --job-id 2SR3u0000008fBDGAY",
        "Resume your most recent incomplete scratch org:\n<%= config.bin %> <%= command.id %> --use-most-recent"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "job-id": {
          "name": "job-id",
          "type": "option",
          "char": "i",
          "summary": "Job ID of the incomplete scratch org create that you want to resume.",
          "description": "The job ID is the same as the record ID of the incomplete scratch org in the ScratchOrgInfo object of the Dev Hub.\n\nThe job ID is valid for 24 hours after you start the scratch org creation.",
          "multiple": false,
          "deprecateAliases": true
        },
        "use-most-recent": {
          "name": "use-most-recent",
          "type": "boolean",
          "char": "r",
          "summary": "Use the job ID of the most recent incomplete scratch org.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {}
    }
  }
}