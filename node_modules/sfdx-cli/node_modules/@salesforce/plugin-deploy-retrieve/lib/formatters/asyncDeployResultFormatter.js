"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsyncDeployResultFormatter = exports.deployAsyncMessages = void 0;
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const core_1 = require("@oclif/core");
const core_2 = require("@salesforce/core");
core_2.Messages.importMessagesDirectory(__dirname);
exports.deployAsyncMessages = core_2.Messages.loadMessages('@salesforce/plugin-deploy-retrieve', 'deploy.async');
class AsyncDeployResultFormatter {
    constructor(id, bin) {
        this.id = id;
        this.bin = bin;
    }
    getJson() {
        return { id: this.id, done: false, status: 'Queued', files: [] };
    }
    display() {
        core_1.ux.log(exports.deployAsyncMessages.getMessage('info.AsyncDeployQueued'));
        core_1.ux.log();
        core_1.ux.log(exports.deployAsyncMessages.getMessage('info.AsyncDeployResume', [this.bin, this.id]));
        core_1.ux.log(exports.deployAsyncMessages.getMessage('info.AsyncDeployStatus', [this.bin, this.id]));
        core_1.ux.log(exports.deployAsyncMessages.getMessage('info.AsyncDeployCancel', [this.bin, this.id]));
    }
}
exports.AsyncDeployResultFormatter = AsyncDeployResultFormatter;
//# sourceMappingURL=asyncDeployResultFormatter.js.map