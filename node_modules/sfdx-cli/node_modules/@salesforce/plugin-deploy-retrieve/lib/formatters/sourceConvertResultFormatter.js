"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SourceConvertResultFormatter = exports.convertMessages = void 0;
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const path_1 = require("path");
const core_1 = require("@oclif/core");
const core_2 = require("@salesforce/core");
core_2.Messages.importMessagesDirectory(__dirname);
exports.convertMessages = core_2.Messages.loadMessages('@salesforce/plugin-deploy-retrieve', 'convert.source');
class SourceConvertResultFormatter {
    constructor(result) {
        this.result = result;
    }
    getJson() {
        if (!this.result.packagePath) {
            throw new core_2.SfError('Convert result contains no packagePath');
        }
        return {
            location: (0, path_1.resolve)(this.result.packagePath),
        };
    }
    display() {
        if ([0, 69].includes(process.exitCode ?? 0)) {
            core_1.ux.log(exports.convertMessages.getMessage('success', [this.result.packagePath]));
        }
        else {
            throw new core_2.SfError(exports.convertMessages.getMessage('convertFailed'), 'ConvertFailed');
        }
    }
}
exports.SourceConvertResultFormatter = SourceConvertResultFormatter;
//# sourceMappingURL=sourceConvertResultFormatter.js.map