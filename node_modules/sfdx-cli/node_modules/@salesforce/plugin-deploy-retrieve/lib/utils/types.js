"use strict";
/*
 * Copyright (c) 2021, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isSdrSuccess = exports.isSdrFailure = exports.isSourceComponent = exports.API = exports.TestLevel = exports.reportsFormatters = void 0;
const source_deploy_retrieve_1 = require("@salesforce/source-deploy-retrieve");
const ts_types_1 = require("@salesforce/ts-types");
const apex_node_1 = require("@salesforce/apex-node");
exports.reportsFormatters = Object.keys(apex_node_1.DefaultReportOptions);
var TestLevel;
(function (TestLevel) {
    TestLevel["NoTestRun"] = "NoTestRun";
    TestLevel["RunSpecifiedTests"] = "RunSpecifiedTests";
    TestLevel["RunLocalTests"] = "RunLocalTests";
    TestLevel["RunAllTestsInOrg"] = "RunAllTestsInOrg";
})(TestLevel = exports.TestLevel || (exports.TestLevel = {}));
var API;
(function (API) {
    API["SOAP"] = "SOAP";
    API["REST"] = "REST";
})(API = exports.API || (exports.API = {}));
/** validates source component with fullname, type, and xml props */
const isSourceComponent = (sc) => (0, ts_types_1.isObject)(sc) && 'fullName' in sc && 'type' in sc && 'xml' in sc;
exports.isSourceComponent = isSourceComponent;
const isSdrFailure = (fileResponse) => fileResponse.state === source_deploy_retrieve_1.ComponentStatus.Failed;
exports.isSdrFailure = isSdrFailure;
const isSdrSuccess = (fileResponse) => fileResponse.state !== source_deploy_retrieve_1.ComponentStatus.Failed;
exports.isSdrSuccess = isSdrSuccess;
//# sourceMappingURL=types.js.map