"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DEPLOY_STATUS_CODES_DESCRIPTIONS = exports.DEPLOY_STATUS_CODES = void 0;
const core_1 = require("@salesforce/core");
const source_deploy_retrieve_1 = require("@salesforce/source-deploy-retrieve");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-deploy-retrieve', 'errorCodes');
exports.DEPLOY_STATUS_CODES = new Map([
    [source_deploy_retrieve_1.RequestStatus.Succeeded, 0],
    [source_deploy_retrieve_1.RequestStatus.Canceled, 1],
    [source_deploy_retrieve_1.RequestStatus.Failed, 1],
    [source_deploy_retrieve_1.RequestStatus.SucceededPartial, 68],
    [source_deploy_retrieve_1.RequestStatus.InProgress, 69],
    [source_deploy_retrieve_1.RequestStatus.Pending, 69],
    [source_deploy_retrieve_1.RequestStatus.Canceling, 69],
]);
exports.DEPLOY_STATUS_CODES_DESCRIPTIONS = Object.fromEntries(Array.from(exports.DEPLOY_STATUS_CODES).map(([status, code]) => [
    `${status} (${code})`,
    messages.getMessage(`errorCode.deploy.${status}`),
]));
//# sourceMappingURL=errorCodes.js.map