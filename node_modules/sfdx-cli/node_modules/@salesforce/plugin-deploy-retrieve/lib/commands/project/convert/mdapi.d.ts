import { SfCommand } from '@salesforce/sf-plugins-core';
import { Interfaces } from '@oclif/core';
import { ConvertMdapiJson } from '../../../utils/types';
export interface EnsureFsFlagOptions {
    flagName: string;
    path: string;
    type: 'dir' | 'file' | 'any';
    throwOnENOENT?: boolean;
}
export declare class Mdapi extends SfCommand<ConvertMdapiJson> {
    static readonly aliases: string[];
    static readonly deprecateAliases = true;
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly requiresProject = true;
    static readonly flags: {
        'api-version': Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        loglevel: Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'root-dir': Interfaces.OptionFlag<string, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'output-dir': Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        manifest: Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'metadata-dir': Interfaces.OptionFlag<string[] | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        metadata: Interfaces.OptionFlag<string[] | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
    };
    private flags;
    private componentSet?;
    private convertResult?;
    run(): Promise<ConvertMdapiJson>;
    protected convert(): Promise<void>;
    protected formatResult(): ConvertMdapiJson;
}
