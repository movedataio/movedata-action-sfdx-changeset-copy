import { Hook } from '@oclif/core';
import { Deployer, SfCommand } from '@salesforce/sf-plugins-core';
export declare const DEPLOY_OPTIONS_FILE = "deploy-options.json";
export default class Deploy extends SfCommand<void> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static enableJsonFlag: boolean;
    static state: string;
    static deprecationOptions: {
        version: string;
        message: string;
    };
    static readonly flags: {
        interactive: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    run(): Promise<void>;
    /**
     * If the deploy file exists, we do not want the command to be interactive. But if the file
     * does not exist then we want to force the command to be interactive.
     */
    isInteractive(interactive: boolean): Promise<boolean>;
    readOptions(): Promise<Record<string, Deployer.Options>>;
    commit(): Promise<void>;
    shouldCommit(): Promise<boolean>;
    askToSave(): Promise<boolean>;
    selectDeployers(deployers: Deployer[]): Promise<Deployer[]>;
    checkForHookFailures(hookResults: Hook.Result<Deployer[]>): void;
}
