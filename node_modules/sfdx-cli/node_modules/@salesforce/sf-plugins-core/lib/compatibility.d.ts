/**
 * Adds an alias for the deprecated sfdx-style "apiversion" and provides a warning if it is used
 * See orgApiVersionFlag for full details
 *
 * @deprecated
 * @example
 * ```
 * import { Flags } from '@salesforce/sf-plugins-core';
 * public static flags = {
 *    'api-version': Flags.orgApiVersion({
 *       char: 'a',
 *       description: 'api version for the org'
 *    }),
 * }
 * ```
 */
export declare const orgApiVersionFlagWithDeprecations: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
/**
 * Use only for commands that maintain sfdx compatibility.
 * Flag will be hidden and will show a warning if used.
 * Flag does *not* set the loglevel
 *
 * @deprecated
 *
 */
export declare const loglevel: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
/**
 * @deprecated
 */
export declare const optionalOrgFlagWithDeprecations: import("@oclif/core/lib/interfaces").OptionFlag<import("@salesforce/core").Org | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
/**
 * @deprecated
 */
export declare const requiredOrgFlagWithDeprecations: import("@oclif/core/lib/interfaces").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
/**
 * @deprecated
 */
export declare const requiredHubFlagWithDeprecations: import("@oclif/core/lib/interfaces").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
/**
 * @deprecated
 */
export declare const optionalHubFlagWithDeprecations: import("@oclif/core/lib/interfaces").OptionFlag<import("@salesforce/core").Org | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
export type ArrayWithDeprecationOptions = {
    multiple?: true;
    parse?: undefined;
};
/**
 * @deprecated
 */
export declare const arrayWithDeprecation: import("@oclif/core/lib/interfaces/parser").FlagDefinition<string[], ArrayWithDeprecationOptions>;
//# sourceMappingURL=compatibility.d.ts.map