"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SfHook = void 0;
const kit_1 = require("@salesforce/kit");
const core_1 = require("@oclif/core");
/**
 * Class that provides a static method to run a pre-defined sf hook. See {@link SfHooks}.
 */
class SfHook {
    /**
     * Executes a well known Unified CLI hook. See {@link SfHooks}.
     */
    static async run(config, hookName, options = {}) {
        const timeout = kit_1.Duration.milliseconds(kit_1.env.getNumber('SF_HOOK_TIMEOUT_MS') ?? 5000);
        const results = await config.runHook(hookName, options, timeout.milliseconds, true);
        results.failures.forEach((failure) => {
            core_1.ux.debug(`Failed to run ${hookName} hook for ${failure.plugin.name}`);
            core_1.ux.debug(failure.error.toString());
        });
        return results;
    }
}
exports.SfHook = SfHook;
//# sourceMappingURL=hooks.js.map