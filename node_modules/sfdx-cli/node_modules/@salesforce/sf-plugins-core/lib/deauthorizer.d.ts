import { JsonMap } from '@salesforce/ts-types';
/**
 * The Deauthorizer is an abstract class that is used to implement a concrete implementation of deauthorizing an environment.
 */
export declare abstract class Deauthorizer<T = JsonMap> {
    removeAll(): Promise<Deauthorizer.Result>;
    /**
     * This method should return a list of all the environments a deauthorizer could deauthorize.
     */
    abstract find(): Promise<Record<string, T>>;
    /**
     * This method should deauthorize an environment.
     */
    abstract remove(id: string): Promise<boolean>;
}
export declare namespace Deauthorizer {
    type Result = {
        successes: string[];
        failures: string[];
    };
}
//# sourceMappingURL=deauthorizer.d.ts.map