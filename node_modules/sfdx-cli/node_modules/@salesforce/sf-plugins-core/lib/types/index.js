"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnvList = void 0;
/**
 * By default `sf env list` will render a table with all the data provided by the hook.
 * The columns of the table are derived from the keys of the provided data. These column
 * headers are Title Cased for readability. To overwrite a column name specify it with
 * the `keys` property.
 *
 * @example
 *
 * ```
 * {
 *   title: 'My Envs',
 *   data: [{ username: 'foo', theURL: 'https://example.com' }]
 * }
 * // Renders as:
 * My Envs
 * ================================
 * | Username | The URL
 * | foo      | https://example.com
 *```
 *
 * @example
 *
 * ```
 * {
 *   data: [{ username: 'foo', theURL: 'https://example.com' }]
 *   keys: { theURL: 'Url', username: 'Name' },
 * }
 *
 * // Renders as:
 * My Envs
 * ============================
 * | Name | Url
 * | foo  | https://example.com
 *
 *```
 */
var EnvList;
(function (EnvList) {
    let EnvType;
    (function (EnvType) {
        EnvType["salesforceOrgs"] = "salesforceOrgs";
        EnvType["scratchOrgs"] = "scratchOrgs";
        EnvType["computeEnvs"] = "computeEnvs";
    })(EnvType = EnvList.EnvType || (EnvList.EnvType = {}));
})(EnvList = exports.EnvList || (exports.EnvList = {}));
//# sourceMappingURL=index.js.map