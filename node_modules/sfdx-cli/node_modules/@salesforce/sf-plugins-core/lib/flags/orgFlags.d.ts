import { Org } from '@salesforce/core';
export declare function maybeGetOrg(input: string): Promise<Org>;
export declare function maybeGetOrg(input: undefined): Promise<undefined>;
export declare function maybeGetOrg(input?: string | undefined): Promise<Org | undefined>;
export declare const maybeGetHub: (input?: string) => Promise<Org | undefined>;
export declare const getOrgOrThrow: (input?: string) => Promise<Org>;
export declare const getHubOrThrow: (aliasOrUsername?: string) => Promise<Org>;
/**
 * An optional org specified by username or alias
 * Will default to the default org if one is not specified.
 * Will not throw if the specified org and default do not exist
 *
 * @example
 *
 * ```
 * import { Flags } from '@salesforce/sf-plugins-core';
 * public static flags = {
 *     // setting length or prefix
 *    'target-org': Flags.optionalOrg(),
 *    // adding properties
 *    'flag2': Flags.optionalOrg({
 *        required: true,
 *        description: 'flag2 description',
 *     }),
 * }
 * ```
 */
export declare const optionalOrgFlag: import("@oclif/core/lib/interfaces/parser").FlagDefinition<Org | undefined, Record<string, unknown>>;
/**
 * A required org, specified by username or alias
 * Will throw if the specified org default do not exist
 * Will default to the default org if one is not specified.
 * Will throw if no default org exists and none is specified
 *
 * @example
 *
 * ```
 * import { Flags } from '@salesforce/sf-plugins-core';
 * public static flags = {
 *     // setting length or prefix
 *    'target-org': Flags.requiredOrg(),
 *    // adding properties
 *    'flag2': Flags.requiredOrg({
 *        required: true,
 *        description: 'flag2 description',
 *        char: 'o'
 *     }),
 * }
 * ```
 */
export declare const requiredOrgFlag: import("@oclif/core/lib/interfaces/parser").FlagDefinition<Org, Record<string, unknown>>;
/**
 * A required org that is a devHub
 * Will throw if the specified org does not exist
 * Will default to the default dev hub if one is not specified
 * Will throw if no default deb hub exists and none is specified
 *
 * @example
 *
 * ```
 * import { Flags } from '@salesforce/sf-plugins-core';
 * public static flags = {
 *     // setting length or prefix
 *    'target-org': requiredHub(),
 *    // adding properties
 *    'flag2': requiredHub({
 *        required: true,
 *        description: 'flag2 description',
 *        char: 'h'
 *     }),
 * }
 * ```
 */
export declare const requiredHubFlag: import("@oclif/core/lib/interfaces/parser").FlagDefinition<Org, Record<string, unknown>>;
/**
 * An optional org that, if present, must be a devHub
 * Will throw if the specified org does not exist
 * Will default to the default dev hub if one is not specified
 * Will NOT throw if no default deb hub exists and none is specified
 *
 * @example
 *
 * ```
 * import { Flags } from '@salesforce/sf-plugins-core';
 * public static flags = {
 *     // setting length or prefix
 *    'target-org': optionalHubFlag(),
 *    // adding properties
 *    'flag2': optionalHubFlag({
 *        description: 'flag2 description',
 *        char: 'h'
 *     }),
 * }
 * ```
 */
export declare const optionalHubFlag: import("@oclif/core/lib/interfaces/parser").FlagDefinition<Org | undefined, Record<string, unknown>>;
//# sourceMappingURL=orgFlags.d.ts.map