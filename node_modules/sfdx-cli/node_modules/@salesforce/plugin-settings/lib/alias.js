"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AliasCommand = void 0;
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
class AliasCommand extends sf_plugins_core_1.SfCommand {
    output(title, results) {
        if (results.length === 0) {
            this.log('No results');
            return;
        }
        const columns = {
            alias: { header: 'Alias' },
            value: { header: 'Value' },
        };
        if (title.includes('Set') || title.includes('Unset')) {
            columns.success = { header: 'Success' };
        }
        // If any result contains an Error, add the header and grab the message off of Error
        if (results.some((result) => result.error)) {
            process.exitCode = 1;
            columns.message = { header: 'Message' };
            results.map((result) => (result.message = result.error?.message));
        }
        this.table(results, columns, { title, 'no-truncate': true });
    }
}
exports.AliasCommand = AliasCommand;
//# sourceMappingURL=alias.js.map