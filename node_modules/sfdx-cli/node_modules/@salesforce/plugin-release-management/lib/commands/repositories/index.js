"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
const core_1 = require("@salesforce/core");
const core_2 = require("@oclif/core");
const repositories_1 = require("../../repositories");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-release-management', 'repositories');
class Repositories extends sf_plugins_core_1.SfCommand {
    async run() {
        const { flags } = await this.parse(Repositories);
        const repositories = await (0, repositories_1.retrieveKnownRepositories)();
        if (!flags.json) {
            core_2.ux.table(repositories, {
                organization: {},
                name: {},
                url: {},
                packages: {
                    get: (row) => row.packages.map((pkg) => `${pkg.type} ${pkg.name}`).join('\n'),
                    extended: true,
                },
            }, {
                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
                printLine: this.log.bind(this),
                ...flags, // parsed flags
            });
        }
        return repositories;
    }
}
exports.default = Repositories;
Repositories.summary = messages.getMessage('description');
Repositories.description = messages.getMessage('description');
Repositories.examples = messages.getMessages('examples');
// eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
Repositories.flags = {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    ...core_2.ux.table.flags(),
};
//# sourceMappingURL=index.js.map