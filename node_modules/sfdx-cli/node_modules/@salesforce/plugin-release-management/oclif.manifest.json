{
  "version": "3.16.4",
  "commands": {
    "channel:promote": {
      "id": "channel:promote",
      "summary": "promote a s3 channel",
      "description": "promote a s3 channel",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --candidate latest-rc --target latest --platform win --platform mac"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "dryrun": {
          "name": "dryrun",
          "type": "boolean",
          "char": "d",
          "summary": "If true, only show what would happen",
          "allowNo": false
        },
        "promote-to-channel": {
          "name": "promote-to-channel",
          "type": "option",
          "char": "t",
          "summary": "the channel name that you are promoting to",
          "required": true,
          "multiple": false,
          "default": "stable",
          "aliases": [
            "target"
          ]
        },
        "promote-from-channel": {
          "name": "promote-from-channel",
          "type": "option",
          "char": "C",
          "summary": "the channel name that you want to promote",
          "multiple": false,
          "aliases": [
            "candidate"
          ]
        },
        "platform": {
          "name": "platform",
          "type": "option",
          "char": "p",
          "summary": "the platform to promote",
          "multiple": true,
          "options": [
            "win",
            "macos",
            "deb"
          ],
          "delimiter": ","
        },
        "cli": {
          "name": "cli",
          "type": "option",
          "char": "c",
          "summary": "the cli name to promote",
          "required": true,
          "multiple": false,
          "options": [
            "sf",
            "sfdx"
          ]
        },
        "sha": {
          "name": "sha",
          "type": "option",
          "char": "s",
          "summary": "the short sha to promote",
          "multiple": false
        },
        "max-age": {
          "name": "max-age",
          "type": "option",
          "char": "m",
          "summary": "cache control max-age in seconds",
          "multiple": false,
          "default": 300,
          "aliases": [
            "maxage"
          ]
        },
        "indexes": {
          "name": "indexes",
          "type": "boolean",
          "char": "i",
          "summary": "append the promoted urls into the index files",
          "allowNo": true
        },
        "xz": {
          "name": "xz",
          "type": "boolean",
          "char": "x",
          "summary": "also upload xz",
          "allowNo": true
        },
        "architecture-target": {
          "name": "architecture-target",
          "type": "option",
          "char": "T",
          "summary": "comma-separated targets to promote (e.g.: linux-arm,win32-x64)",
          "multiple": true,
          "options": [
            "linux-x64",
            "linux-arm",
            "win32-x64",
            "win32-x86",
            "darwin-x64"
          ],
          "aliases": [
            "targets"
          ],
          "delimiter": ","
        },
        "version": {
          "name": "version",
          "type": "option",
          "char": "v",
          "summary": "the version of the candidate to be promoted, which must exist already in s3. Used to fetch the correct sha",
          "multiple": false
        }
      },
      "args": {}
    },
    "cli:releasenotes": {
      "id": "cli:releasenotes",
      "summary": "pull all relevant information for writing release notes.\n Requires the GH_TOKEN to be set in the environment.",
      "description": "pull all relevant information for writing release notes.\n Requires the GH_TOKEN to be set in the environment.",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --cli sf",
        "<%= config.bin %> <%= command.id %> --cli sfdx",
        "<%= config.bin %> <%= command.id %> --cli sf --since 1.0.0",
        "<%= config.bin %> <%= command.id %> --cli sfdx --since 7.19.0",
        "<%= config.bin %> <%= command.id %> --cli sf > changes.txt",
        "<%= config.bin %> <%= command.id %> --cli sf --markdown > changes.md"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "cli": {
          "name": "cli",
          "type": "option",
          "char": "c",
          "summary": "the cli to pull information for",
          "required": true,
          "multiple": false,
          "options": [
            "sf",
            "sfdx"
          ]
        },
        "since": {
          "name": "since",
          "type": "option",
          "char": "s",
          "summary": "the version number of the previous release. Defaults to the latest-rc version on npm",
          "multiple": false
        },
        "markdown": {
          "name": "markdown",
          "type": "boolean",
          "char": "m",
          "summary": "format the output in markdown",
          "allowNo": false
        }
      },
      "args": {}
    },
    "dependabot:automerge": {
      "id": "dependabot:automerge",
      "summary": "automatically merge one green, mergeable PR up to the specified maximum bump type",
      "description": "automatically merge one green, mergeable PR up to the specified maximum bump type",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --max-version-bump patch",
        "<%= config.bin %> <%= command.id %> --max-version-bump minor",
        "<%= config.bin %> <%= command.id %> --max-version-bump major"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "owner": {
          "name": "owner",
          "type": "option",
          "char": "o",
          "summary": "the organization that the repository belongs to. This defaults to the owner specified in the package.json",
          "multiple": false,
          "dependsOn": [
            "repo"
          ]
        },
        "repo": {
          "name": "repo",
          "type": "option",
          "char": "r",
          "summary": "the repository you want to consolidate PRs on. This defaults to the repository specified in the package.json",
          "multiple": false,
          "dependsOn": [
            "owner"
          ]
        },
        "max-version-bump": {
          "name": "max-version-bump",
          "type": "option",
          "char": "m",
          "description": "the maximum version bump you want to be included",
          "required": true,
          "multiple": false,
          "options": [
            "major",
            "minor",
            "patch"
          ],
          "default": "minor"
        },
        "dryrun": {
          "name": "dryrun",
          "type": "boolean",
          "char": "d",
          "summary": "only show what would happen if you consolidated dependabot PRs",
          "allowNo": false
        },
        "skip-ci": {
          "name": "skip-ci",
          "type": "boolean",
          "char": "s",
          "summary": "add [skip ci] to the merge commit title",
          "allowNo": false
        },
        "merge-method": {
          "name": "merge-method",
          "type": "option",
          "summary": "merge method to use",
          "multiple": false,
          "options": [
            "merge",
            "squash",
            "rebase"
          ],
          "default": "merge"
        }
      },
      "args": {}
    },
    "dependabot:consolidate": {
      "id": "dependabot:consolidate",
      "summary": "consolidate dependabot PRs into a single PR",
      "description": "consolidate dependabot PRs into a single PR",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --max-version-bump patch",
        "<%= config.bin %> <%= command.id %> --max-version-bump minor",
        "<%= config.bin %> <%= command.id %> --max-version-bump major"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "max-version-bump": {
          "name": "max-version-bump",
          "type": "option",
          "char": "m",
          "description": "the maximum version bump you want to be included",
          "required": true,
          "multiple": false,
          "options": [
            "major",
            "minor",
            "patch"
          ],
          "default": "minor"
        },
        "base-branch": {
          "name": "base-branch",
          "type": "option",
          "char": "b",
          "summary": "name of the base branch for merging",
          "required": true,
          "multiple": false,
          "default": "main"
        },
        "target-branch": {
          "name": "target-branch",
          "type": "option",
          "char": "t",
          "summary": "name of the target branch for merging",
          "required": true,
          "multiple": false,
          "default": "consolidate-dependabot"
        },
        "ignore": {
          "name": "ignore",
          "type": "option",
          "summary": "ignore any PRs with titles that include this value",
          "multiple": true,
          "delimiter": ","
        },
        "dryrun": {
          "name": "dryrun",
          "type": "boolean",
          "char": "d",
          "summary": "only show what would happen if you consolidated dependabot PRs",
          "allowNo": false
        },
        "no-pr": {
          "name": "no-pr",
          "type": "boolean",
          "summary": "do everything but create the PR",
          "allowNo": false
        },
        "owner": {
          "name": "owner",
          "type": "option",
          "char": "o",
          "summary": "the organization that the repository belongs to. This defaults to the owner specified in the package.json",
          "multiple": false
        },
        "repo": {
          "name": "repo",
          "type": "option",
          "char": "r",
          "summary": "the repository you want to consolidate PRs on. This defaults to the repository specified in the package.json",
          "multiple": false,
          "dependsOn": [
            "owner"
          ]
        }
      },
      "args": {}
    },
    "repositories": {
      "id": "repositories",
      "summary": "list repositories owned and supported by Salesforce CLI\nFor more information on the list of repositories, visit https://github.com/salesforcecli/status.",
      "description": "list repositories owned and supported by Salesforce CLI\nFor more information on the list of repositories, visit https://github.com/salesforcecli/status.",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --columns=url --filter='Name=sfdx-core' --no-header | xargs open",
        "<%= config.bin %> <%= command.id %> --json | jq -r '.result[] | select(.name==\"sfdx-core\") | .packages[] | .url"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "columns": {
          "name": "columns",
          "type": "option",
          "description": "only show provided columns (comma-separated)",
          "multiple": false,
          "exclusive": [
            "extended"
          ]
        },
        "sort": {
          "name": "sort",
          "type": "option",
          "description": "property to sort by (prepend '-' for descending)",
          "multiple": false
        },
        "filter": {
          "name": "filter",
          "type": "option",
          "description": "filter property by partial string matching, ex: name=foo",
          "multiple": false
        },
        "csv": {
          "name": "csv",
          "type": "boolean",
          "description": "output is csv format [alias: --output=csv]",
          "allowNo": false,
          "exclusive": [
            "no-truncate"
          ]
        },
        "output": {
          "name": "output",
          "type": "option",
          "description": "output in a more machine friendly format",
          "multiple": false,
          "options": [
            "csv",
            "json",
            "yaml"
          ],
          "exclusive": [
            "no-truncate",
            "csv"
          ]
        },
        "extended": {
          "name": "extended",
          "type": "boolean",
          "char": "x",
          "description": "show extra columns",
          "allowNo": false,
          "exclusive": [
            "columns"
          ]
        },
        "no-truncate": {
          "name": "no-truncate",
          "type": "boolean",
          "description": "do not truncate output to fit screen",
          "allowNo": false,
          "exclusive": [
            "csv"
          ]
        },
        "no-header": {
          "name": "no-header",
          "type": "boolean",
          "description": "hide table header from output",
          "allowNo": false,
          "exclusive": [
            "csv"
          ]
        }
      },
      "args": {}
    },
    "typescript:update": {
      "id": "typescript:update",
      "summary": "Runs tests with updated typescript version and ES target",
      "description": "Runs tests with updated typescript version and ES target",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "version": {
          "name": "version",
          "type": "option",
          "char": "v",
          "summary": "Specify the typescript version you'd like to update to. Defaults to latest if not specified",
          "multiple": false,
          "default": "latest"
        },
        "target": {
          "name": "target",
          "type": "option",
          "char": "t",
          "summary": "Specify the ES target you'd like to use. Defaults to ESNext if not specified",
          "multiple": false,
          "default": "ESNext"
        }
      },
      "args": {}
    },
    "cli:artifacts:compare": {
      "id": "cli:artifacts:compare",
      "summary": "Look for breaking changes in artifacts (schemas and snapshots) from plugins. Must be run in CLI directory.",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "plugin": {
          "name": "plugin",
          "type": "option",
          "char": "p",
          "summary": "List of plugins to check for breaking changes.",
          "multiple": true
        },
        "previous": {
          "name": "previous",
          "type": "option",
          "char": "r",
          "summary": "Previous CLI version to compare against. Defaults to the last published version.",
          "multiple": false
        },
        "current": {
          "name": "current",
          "type": "option",
          "char": "c",
          "summary": "Current CLI version to compare against. Defaults to the version on the CLI in the current directory.",
          "multiple": false
        }
      },
      "args": {}
    },
    "cli:install:test": {
      "id": "cli:install:test",
      "summary": "install sf or sfdx",
      "description": "install sf or sfdx",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --cli sfdx --method installer",
        "<%= config.bin %> <%= command.id %> --cli sfdx --method npm",
        "<%= config.bin %> <%= command.id %> --cli sfdx --method tarball",
        "<%= config.bin %> <%= command.id %> --cli sf --method tarball",
        "<%= config.bin %> <%= command.id %> --cli sf --method tarball --channel stable-rc"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "cli": {
          "name": "cli",
          "type": "option",
          "char": "c",
          "summary": "the cli to install",
          "required": true,
          "multiple": false,
          "options": [
            "sf",
            "sfdx"
          ]
        },
        "method": {
          "name": "method",
          "type": "option",
          "char": "m",
          "summary": "the installation method to use",
          "required": true,
          "multiple": false,
          "options": [
            "installer",
            "npm",
            "tarball"
          ]
        },
        "channel": {
          "name": "channel",
          "type": "option",
          "summary": "the channel to install from",
          "multiple": false,
          "options": [
            "legacy",
            "stable",
            "stable-rc",
            "latest",
            "latest-rc"
          ],
          "default": "stable"
        },
        "output-file": {
          "name": "output-file",
          "type": "option",
          "summary": "the file to write the JSON results to (must be .json)",
          "multiple": false,
          "default": "test-results.json"
        }
      },
      "args": {}
    },
    "cli:release:automerge": {
      "id": "cli:release:automerge",
      "summary": "Attempt to automerge nightly PR",
      "description": "Attempt to automerge nightly PR",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --owner salesforcecli --repo sfdx-cli --pul-number 1049"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "owner": {
          "name": "owner",
          "type": "option",
          "summary": "Github owner (org), example: salesforcecli",
          "required": true,
          "multiple": false,
          "dependsOn": [
            "repo"
          ],
          "aliases": [
            "org"
          ]
        },
        "repo": {
          "name": "repo",
          "type": "option",
          "summary": "Github repo, example: sfdx-cli",
          "required": true,
          "multiple": false,
          "dependsOn": [
            "owner"
          ]
        },
        "pull-number": {
          "name": "pull-number",
          "type": "option",
          "summary": "Github pull request number to merge",
          "required": true,
          "multiple": false
        },
        "dry-run": {
          "name": "dry-run",
          "type": "boolean",
          "char": "d",
          "summary": "Run all checks, but do not merge PR",
          "allowNo": false
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "Show additional debug output",
          "allowNo": false
        }
      },
      "args": {}
    },
    "cli:release:build": {
      "id": "cli:release:build",
      "summary": "builds a new release from a designated starting point and optionally creates PR in Github",
      "description": "builds a new release from a designated starting point and optionally creates PR in Github",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [
        "cli:latestrc:build"
      ],
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --patch",
        "<%= config.bin %> <%= command.id %> --start-from-npm-dist-tag latest-rc --patch",
        "<%= config.bin %> <%= command.id %> --start-from-github-ref 7.144.0",
        "<%= config.bin %> <%= command.id %> --start-from-github-ref main",
        "<%= config.bin %> <%= command.id %> --start-from-github-ref f476e8e",
        "<%= config.bin %> <%= command.id %> --start-from-github-ref main --prerelease beta",
        "<%= config.bin %> <%= command.id %> --build-only",
        "<%= config.bin %> <%= command.id %> --only @salesforce/plugin-source,@salesforce/plugin-info@1.2.3,@sf/config"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "start-from-npm-dist-tag": {
          "name": "start-from-npm-dist-tag",
          "type": "option",
          "char": "d",
          "summary": "the npm dist-tag to start the release from, examples: nightly, latest-rc",
          "multiple": false,
          "aliases": [
            "rctag"
          ]
        },
        "start-from-github-ref": {
          "name": "start-from-github-ref",
          "type": "option",
          "char": "g",
          "summary": "a Github ref to start the release from, examples: main, 7.144.0, f476e8e",
          "multiple": false
        },
        "release-channel": {
          "name": "release-channel",
          "type": "option",
          "char": "c",
          "summary": "the channel intended for this release, examples: nightly, latest-rc, latest, dev, beta, etc...",
          "required": true,
          "multiple": false
        },
        "build-only": {
          "name": "build-only",
          "type": "boolean",
          "summary": "only build the release, do not git add/commit/push",
          "allowNo": false
        },
        "resolutions": {
          "name": "resolutions",
          "type": "boolean",
          "summary": "bump the versions of packages listed in the resolutions section",
          "allowNo": true
        },
        "only": {
          "name": "only",
          "type": "option",
          "summary": "only bump the version of the packages passed in, uses latest if version is not provided",
          "multiple": true,
          "delimiter": ","
        },
        "pinned-deps": {
          "name": "pinned-deps",
          "type": "boolean",
          "summary": "bump the versions of the packages listed in the pinnedDependencies section",
          "allowNo": true
        },
        "jit": {
          "name": "jit",
          "type": "boolean",
          "summary": "bump the versions of the packages listed in the jitPlugins (just-in-time) section",
          "allowNo": true
        },
        "label": {
          "name": "label",
          "type": "option",
          "summary": "add one or more labels to the Github PR",
          "multiple": true
        },
        "patch": {
          "name": "patch",
          "type": "boolean",
          "summary": "bump the release as a patch of an existing version, not a new minor version",
          "allowNo": false
        }
      },
      "args": {}
    },
    "cli:schemas:collect": {
      "id": "cli:schemas:collect",
      "summary": "collect schemas from installed plugins",
      "description": "collect schemas from installed plugins",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "state": "deprecated",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        }
      },
      "args": {}
    },
    "cli:schemas:compare": {
      "id": "cli:schemas:compare",
      "summary": "compare schemas from installed plugins",
      "description": "compare schemas from installed plugins",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "state": "deprecated",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        }
      },
      "args": {}
    },
    "cli:tarballs:prepare": {
      "id": "cli:tarballs:prepare",
      "summary": "remove unnecessary files from node_modules",
      "description": "remove unnecessary files from node_modules",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %>"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "dryrun": {
          "name": "dryrun",
          "type": "boolean",
          "char": "d",
          "summary": "only show what would be removed from node_modules",
          "allowNo": false
        },
        "types": {
          "name": "types",
          "type": "boolean",
          "char": "t",
          "summary": "remove all types (.d.ts) files from node_modules ",
          "allowNo": false
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "show all files paths being removed",
          "allowNo": false
        }
      },
      "args": {}
    },
    "cli:tarballs:smoke": {
      "id": "cli:tarballs:smoke",
      "summary": "smoke tests for the tarballed CLI\n Tests that the CLI and every command can be initialized.",
      "description": "smoke tests for the tarballed CLI\n Tests that the CLI and every command can be initialized.",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --cli sfdx",
        "<%= config.bin %> <%= command.id %> --cli sf"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "cli": {
          "name": "cli",
          "type": "option",
          "char": "c",
          "summary": "the cli to install",
          "required": true,
          "multiple": false,
          "options": [
            "sf",
            "sfdx"
          ]
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "show the --help output for each command",
          "allowNo": false
        }
      },
      "args": {}
    },
    "cli:tarballs:verify": {
      "id": "cli:tarballs:verify",
      "summary": "verify that tarballs are ready to be uploaded",
      "description": "verify that tarballs are ready to be uploaded",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %>",
        "<%= config.bin %> <%= command.id %> --cli sfdx",
        "<%= config.bin %> <%= command.id %> --cli sf"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "cli": {
          "name": "cli",
          "type": "option",
          "char": "c",
          "summary": "the cli to verify",
          "multiple": false,
          "options": [
            "sf",
            "sfdx"
          ],
          "default": "sfdx"
        },
        "windows-username-buffer": {
          "name": "windows-username-buffer",
          "type": "option",
          "char": "w",
          "summary": "the number of characters to allow for windows usernames",
          "multiple": false,
          "default": 41
        }
      },
      "args": {}
    },
    "cli:versions:inspect": {
      "id": "cli:versions:inspect",
      "summary": "inspect the CLI version across all install paths",
      "description": "inspect the CLI version across all install paths",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> -l archive -c stable",
        "<%= config.bin %> <%= command.id %> -l archive -c stable-rc",
        "<%= config.bin %> <%= command.id %> -l archive npm -c stable",
        "<%= config.bin %> <%= command.id %> -l archive npm -c latest",
        "<%= config.bin %> <%= command.id %> -l archive npm -c latest latest-rc",
        "<%= config.bin %> <%= command.id %> -l archive npm -c stable stable-rc",
        "<%= config.bin %> <%= command.id %> -l npm -c latest --salesforce",
        "<%= config.bin %> <%= command.id %> -l npm -c latest -d @salesforce/core",
        "<%= config.bin %> <%= command.id %> -l npm -c latest -d @salesforce/**/ salesforce-alm",
        "<%= config.bin %> <%= command.id %> -l npm -c latest -d chalk -s"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "dependencies": {
          "name": "dependencies",
          "type": "option",
          "char": "d",
          "summary": "glob pattern of dependencies you want to see the version of",
          "multiple": true
        },
        "salesforce": {
          "name": "salesforce",
          "type": "boolean",
          "char": "s",
          "summary": "show versions of salesforce owned dependencies",
          "allowNo": false
        },
        "channels": {
          "name": "channels",
          "type": "option",
          "char": "c",
          "summary": "the channel you want to inspect (for achives, latest and latest-rc are translated to stable and stable-rc. And vice-versa for npm)",
          "required": true,
          "multiple": true,
          "options": [
            "legacy",
            "stable",
            "stable-rc",
            "latest",
            "latest-rc",
            "nightly"
          ]
        },
        "locations": {
          "name": "locations",
          "type": "option",
          "char": "l",
          "summary": "the location you want to inspect",
          "required": true,
          "multiple": true,
          "options": [
            "archive",
            "npm"
          ]
        },
        "cli": {
          "name": "cli",
          "type": "option",
          "summary": "the CLI you want to inspect",
          "required": true,
          "multiple": false,
          "options": [
            "sf",
            "sfdx"
          ],
          "default": "sfdx"
        }
      },
      "args": {}
    },
    "github:check:closed": {
      "id": "github:check:closed",
      "summary": "Show open Github issues with GUS WI",
      "description": "Description of a command.",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> -o me@gus.com"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "gus": {
          "name": "gus",
          "type": "option",
          "char": "o",
          "summary": "Username/alias of your GUS org connection",
          "required": true,
          "multiple": false
        },
        "github-token": {
          "name": "github-token",
          "type": "option",
          "summary": "Github token--store this in the environment as GITHUB_TOKEN",
          "required": true,
          "multiple": false
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "npm:dependencies:pin": {
      "id": "npm:dependencies:pin",
      "summary": "lock a list of dependencies to a target tag or default to 'latest', place these entries in 'pinnedDependencies' entry in the package.json",
      "description": "lock a list of dependencies to a target tag or default to 'latest', place these entries in 'pinnedDependencies' entry in the package.json",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "dryrun": {
          "name": "dryrun",
          "type": "boolean",
          "char": "d",
          "summary": "If true, will not make any changes to the package.json",
          "allowNo": false
        },
        "tag": {
          "name": "tag",
          "type": "option",
          "char": "t",
          "summary": "The name of the tag you want, e.g. 'latest-rc', or 'latest'",
          "multiple": false,
          "default": "latest"
        }
      },
      "args": {}
    },
    "npm:package:promote": {
      "id": "npm:package:promote",
      "summary": "promote an npm package",
      "description": "promote an npm package",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "<%= config.bin %> <%= command.id %> --candidate latest-rc --target latest"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "dryrun": {
          "name": "dryrun",
          "type": "boolean",
          "char": "d",
          "summary": "If true, only show what would happen",
          "allowNo": false
        },
        "target": {
          "name": "target",
          "type": "option",
          "char": "t",
          "summary": "the npm tag that you are promoting to",
          "multiple": false,
          "default": "latest"
        },
        "candidate": {
          "name": "candidate",
          "type": "option",
          "char": "c",
          "summary": "the npm tag that you want to promote",
          "required": true,
          "multiple": false
        }
      },
      "args": {}
    },
    "npm:package:release": {
      "id": "npm:package:release",
      "summary": "publish npm package",
      "description": "publish npm package",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "dryrun": {
          "name": "dryrun",
          "type": "boolean",
          "char": "d",
          "summary": "If true, will not commit changes to repo or push any tags",
          "allowNo": false
        },
        "sign": {
          "name": "sign",
          "type": "boolean",
          "char": "s",
          "summary": "If true, then the package will be signed and the signature will be uploaded to S3",
          "allowNo": false
        },
        "npmtag": {
          "name": "npmtag",
          "type": "option",
          "char": "t",
          "summary": "tag to use when publishing to npm",
          "multiple": false,
          "default": "latest"
        },
        "npmaccess": {
          "name": "npmaccess",
          "type": "option",
          "char": "a",
          "summary": "access level to use when publishing to npm",
          "multiple": false,
          "default": "public"
        },
        "install": {
          "name": "install",
          "type": "boolean",
          "summary": "run yarn install and build on repository",
          "allowNo": true
        },
        "prerelease": {
          "name": "prerelease",
          "type": "option",
          "summary": "determine the next version as <version>-<prerelease>.0 if version is not manually set",
          "multiple": false
        },
        "verify": {
          "name": "verify",
          "type": "boolean",
          "summary": "verify npm registry has new version after publish and digital signature",
          "allowNo": true
        },
        "githubtag": {
          "name": "githubtag",
          "type": "option",
          "summary": "given a github tag, release the version specified in the package.json as is. Useful when you've already done a release and only need npm publish features",
          "multiple": false
        }
      },
      "args": {}
    },
    "npm:release:validate": {
      "id": "npm:release:validate",
      "summary": "inspects the git commits to see if there are any commits that will warrant a new release",
      "description": "inspects the git commits to see if there are any commits that will warrant a new release",
      "strict": true,
      "pluginName": "@salesforce/plugin-release-management",
      "pluginAlias": "@salesforce/plugin-release-management",
      "pluginType": "core",
      "aliases": [],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "show all commits for all packages (only works with --json flag)",
          "allowNo": false
        }
      },
      "args": {}
    }
  }
}