"use strict";
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PackageUninstallReportCommand = void 0;
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
const core_1 = require("@salesforce/core");
const packaging_1 = require("@salesforce/packaging");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-packaging', 'package_uninstall_report');
class PackageUninstallReportCommand extends sf_plugins_core_1.SfCommand {
    async run() {
        const { flags } = await this.parse(PackageUninstallReportCommand);
        const result = await packaging_1.SubscriberPackageVersion.uninstallStatus(flags['request-id'], flags['target-org'].getConnection(flags['api-version']));
        const arg = result.Status === 'Success'
            ? [result.SubscriberPackageVersionId]
            : [this.config.bin, result.Id, flags['target-org'].getUsername()];
        this.log(messages.getMessage(result.Status, arg));
        return result;
    }
}
exports.PackageUninstallReportCommand = PackageUninstallReportCommand;
PackageUninstallReportCommand.summary = messages.getMessage('summary');
PackageUninstallReportCommand.examples = messages.getMessages('examples');
PackageUninstallReportCommand.deprecateAliases = true;
PackageUninstallReportCommand.aliases = ['force:package:beta:uninstall:report', 'force:package:uninstall:report'];
PackageUninstallReportCommand.flags = {
    loglevel: sf_plugins_core_1.loglevel,
    'target-org': sf_plugins_core_1.requiredOrgFlagWithDeprecations,
    'api-version': sf_plugins_core_1.orgApiVersionFlagWithDeprecations,
    // eslint-disable-next-line sf-plugin/id-flag-suggestions
    'request-id': sf_plugins_core_1.Flags.salesforceId({
        length: 'both',
        deprecateAliases: true,
        aliases: ['requestid'],
        char: 'i',
        summary: messages.getMessage('flags.request-id.summary'),
        required: true,
        startsWith: '06y',
    }),
};
//# sourceMappingURL=report.js.map