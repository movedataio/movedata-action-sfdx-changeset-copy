import { SfCommand } from '@salesforce/sf-plugins-core';
import { PackagingSObjects } from '@salesforce/packaging';
export type Package2Result = Partial<Pick<PackagingSObjects.Package2, 'Id' | 'SubscriberPackageId' | 'Name' | 'Description' | 'NamespacePrefix' | 'ContainerOptions' | 'ConvertedFromPackageId' | 'PackageErrorUsername'> & {
    Alias: string;
    CreatedBy: string;
    IsOrgDependent: string;
}>;
export type PackageListCommandResult = Package2Result[];
export declare class PackageListCommand extends SfCommand<PackageListCommandResult> {
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly requiresProject = true;
    static readonly deprecateAliases = true;
    static readonly aliases: string[];
    static readonly flags: {
        loglevel: import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'target-dev-hub': import("@oclif/core/lib/interfaces").OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'api-version': import("@oclif/core/lib/interfaces").OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        verbose: import("@oclif/core/lib/interfaces").BooleanFlag<boolean>;
    };
    private results;
    run(): Promise<PackageListCommandResult>;
    private mapRecordsToResults;
    private displayResults;
}
