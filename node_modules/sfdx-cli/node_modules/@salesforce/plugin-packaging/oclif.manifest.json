{
  "version": "1.16.5",
  "commands": {
    "package:convert": {
      "id": "package:convert",
      "summary": "Create a second-generation package version from a first-generation package.",
      "description": "The package convert creates a new package in the Dev Hub if one does not already exist for the specified first-generation package.\n\nIt then creates a new package version in the Dev Hub with contents based on the specified first-generation package.\n\nThe latest released non-patch package version from the specified first-generation package will be converted.\n\nTo retrieve details about a package version create request, including status and package version ID (04t), run \"<%= config.bin %> package version create report -i 08c...\".\n\nWe recommend specifying the --installation-key to protect the contents of your package and to prevent unauthorized installation of your package.\n\nTo list package version creation requests in the org, run \"<%= config.bin %> package version create list\".",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "hidden": true,
      "aliases": [
        "force:package:beta:convert",
        "force:package:convert"
      ],
      "examples": [
        "Create a second-generation package version from the first-generation package with the specified ID and give it the installation key \"password123\"; uses your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package 033... --installation-key password123",
        "Similar to previous example, but uses the specified Dev Hub org:\n<%= config.bin %> <%= command.id %> --package 033... --installation-key password123 --target-dev-hub devhuborg@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 033) of the first-generation package to convert.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "installation-key": {
          "name": "installation-key",
          "type": "option",
          "char": "k",
          "summary": "Installation key for key-protected package.",
          "description": "Either an --installation-key value or the --installation-key-bypass flag is required.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "installationkey"
          ]
        },
        "definition-file": {
          "name": "definition-file",
          "type": "option",
          "char": "f",
          "summary": "Path to a definition file that contains features and org preferences that the metadata of the package version depends on.",
          "description": "This definition file is similar to the scratch org definition file.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "definitionfile"
          ]
        },
        "installation-key-bypass": {
          "name": "installation-key-bypass",
          "type": "boolean",
          "char": "x",
          "summary": "Bypass the installation key requirement.",
          "description": "If you bypass this requirement, anyone can install your package. Either an --installation-key value or the --installation-key-bypass flag is required.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "installationkeybypass"
          ]
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Minutes to wait for the package version to be created.",
          "multiple": false,
          "default": {
            "quantity": 0,
            "unit": 0
          },
          "deprecateAliases": true
        },
        "build-instance": {
          "name": "build-instance",
          "type": "option",
          "char": "s",
          "summary": "Instance where the conversion package version will be created, such as NA50.",
          "hidden": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "buildinstance"
          ]
        },
        "seed-metadata": {
          "name": "seed-metadata",
          "type": "option",
          "char": "m",
          "summary": "Directory containing metadata to be deployed prior to conversion.",
          "description": "The directory containing metadata that will be deployed on the build org prior to attempting conversion.",
          "multiple": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package:create": {
      "id": "package:create",
      "summary": "Create a package.",
      "description": "First, use this command to create a package. Then create a package version.\n\nIf you donâ€™t have a namespace defined in your sfdx-project.json file, use --no-namespace.\n\nYour --name value must be unique within your namespace.\n\nRun '<%= config.bin %> package list to list all packages in the Dev Hub org.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:create",
        "force:package:create"
      ],
      "examples": [
        "Create an unlocked package from the files in the \"force-app\" directory; uses your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --name MyUnlockedPackage --package-type Unlocked --path force-app",
        "Create a managed packaged from the \"force-app\" directory files, give the package a description, and use the specified Dev Hub org:\n<%= config.bin %> <%= command.id %> --name MyManagedPackage --description \"Your Package Descripton\" --package-type Managed --path force-app --target-dev-hub devhub@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the package to create.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "package-type": {
          "name": "package-type",
          "type": "option",
          "char": "t",
          "summary": "Type of package.",
          "description": "The options for package type are Managed and Unlocked (Managed=DeveloperManagedSubscriberManaged, Unlocked=DeveloperControlledSubscriberEditable). These options determine upgrade and editability rules.",
          "required": true,
          "multiple": false,
          "options": [
            "Managed",
            "Unlocked"
          ],
          "deprecateAliases": true,
          "aliases": [
            "packagetype"
          ]
        },
        "description": {
          "name": "description",
          "type": "option",
          "char": "d",
          "summary": "Description of the package.",
          "multiple": false,
          "deprecateAliases": true
        },
        "no-namespace": {
          "name": "no-namespace",
          "type": "boolean",
          "char": "e",
          "summary": "Create the package with no namespace; available only for unlocked packages.",
          "description": "This flag is useful when youâ€™re migrating an existing org to packages. But use a namespaced package for new metadata.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "nonamespace"
          ]
        },
        "path": {
          "name": "path",
          "type": "option",
          "char": "r",
          "summary": "Path to directory that contains the contents of the package.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "org-dependent": {
          "name": "org-dependent",
          "type": "boolean",
          "summary": "Depends on unpackaged metadata in the installation org; applies to unlocked packages only.",
          "description": "Use Source Tracking in Sandboxes to develop your org-dependent unlocked package. For more information, see \"Create Org-Dependent Unlocked Packages\" in the Salesforce DX Developer Guide.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "orgdependent"
          ]
        },
        "error-notification-username": {
          "name": "error-notification-username",
          "type": "option",
          "char": "o",
          "summary": "Active Dev Hub user designated to receive email notifications for package errors.",
          "description": "Email notifications include information about unhandled Apex exceptions, and install, upgrade, or uninstall failures associated with your package.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "errornotificationusername"
          ]
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:delete": {
      "id": "package:delete",
      "summary": "Delete a package.",
      "description": "Specify the ID or alias of the package you want to delete.\n\nDelete unlocked and second-generation managed packages. Before you delete a package, first delete all associated package versions.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:delete",
        "force:package:delete"
      ],
      "examples": [
        "Delete a package using its alias from your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package \"Your Package Alias\"",
        "Delete a package using its ID from the specified Dev Hub org:\n<%= config.bin %> <%= command.id %> --package 0Ho... --target-dev-hub devhub@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "char": "n",
          "summary": "Donâ€™t prompt before deleting the package.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "noprompt"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 0Ho) or alias of the package to delete.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "undelete": {
          "name": "undelete",
          "type": "boolean",
          "summary": "Undelete a deleted package.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:install": {
      "id": "package:install",
      "summary": "Install a version of a package in the target org.",
      "description": "To install a package, specify a specific version of the package using the 04t package ID. The package and the version you specified installs in your default target org unless you supply the username for a different target org.\n\nFor package upgrades, to specify options for component deprecation or deletion of removed components, include an --upgrade-type value. To delete components that can be safely deleted and deprecate the others, specify --upgrade-type Mixed (the default). To deprecate all removed components, specify --upgrade-type DeprecateOnly. To delete all removed components, except for custom objects and custom fields, that don't have dependencies, specify --upgrade-type Delete. (Note: This option can result in the loss of data that is associated with the deleted components.) The default is Mixed.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:install",
        "force:package:install"
      ],
      "examples": [
        "Install a package version with the specified ID in the org with username \"me@example.com\":\n<%= config.bin %> <%= command.id %> --package 04t... --target-org me@example.com",
        "Install a package version with the specified alias into your default org:\n<%= config.bin %> <%= command.id %> --package awesome_package_alias",
        "Install a package version with an alias that includes spaces into your default org:\n<%= config.bin %> <%= command.id %> --package \"Awesome Package Alias\"",
        "Install an unlocked package version with the specified ID and deprecate all removed components:\n<%= config.bin %> <%= command.id %> --package 04t... --upgrade-type DeprecateOnly"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Number of minutes to wait for installation status.",
          "multiple": false,
          "default": {
            "quantity": 0,
            "unit": 0
          },
          "deprecateAliases": true
        },
        "installation-key": {
          "name": "installation-key",
          "type": "option",
          "char": "k",
          "summary": "Installation key for key-protected package (default: null).",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "installationkey"
          ]
        },
        "publish-wait": {
          "name": "publish-wait",
          "type": "option",
          "char": "b",
          "summary": "Maximum number of minutes to wait for the Subscriber Package Version ID to become available in the target org before canceling the install request.",
          "multiple": false,
          "default": {
            "quantity": 0,
            "unit": 0
          },
          "deprecateAliases": true,
          "aliases": [
            "publishwait"
          ]
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "char": "r",
          "summary": "Don't prompt for confirmation.",
          "description": "Allows the following without an explicit confirmation response: 1) Remote Site Settings and Content Security Policy websites to send or receive data, and 2) --upgrade-type Delete to proceed.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "noprompt"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 04t) or alias of the package version to install.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "apex-compile": {
          "name": "apex-compile",
          "type": "option",
          "char": "a",
          "summary": "Compile all Apex in the org and package, or only Apex in the package; unlocked packages only.",
          "description": "Applies to unlocked packages only. Specifies whether to compile all Apex in the org and package, or only the Apex in the package.\n\nFor package installs into production orgs, or any org that has Apex Compile on Deploy enabled, the platform compiles all Apex in the org after the package install or upgrade operation completes.\n\nThis approach assures that package installs and upgrades donâ€™t impact the performance of an org, and is done even if --apex-compile package is specified.",
          "multiple": false,
          "options": [
            "all",
            "package"
          ],
          "default": "all",
          "deprecateAliases": true,
          "aliases": [
            "apexcompile"
          ]
        },
        "security-type": {
          "name": "security-type",
          "type": "option",
          "char": "s",
          "summary": "Security access type for the installed package. (deprecation notice: The default --security-type value will change from AllUsers to AdminsOnly in v47.0 or later.)",
          "multiple": false,
          "options": [
            "AllUsers",
            "AdminsOnly"
          ],
          "default": "AdminsOnly",
          "deprecateAliases": true,
          "aliases": [
            "securitytype"
          ]
        },
        "upgrade-type": {
          "name": "upgrade-type",
          "type": "option",
          "char": "t",
          "summary": "Upgrade type for the package installation; available only for unlocked packages.",
          "description": "For package upgrades, specifies whether to mark all removed components as deprecated (DeprecateOnly), to delete removed components that can be safely deleted and deprecate the others (Mixed), or to delete all removed components, except for custom objects and custom fields, that don't have dependencies (Delete). The default is Mixed. Can specify DeprecateOnly or Delete only for unlocked package upgrades.",
          "multiple": false,
          "options": [
            "DeprecateOnly",
            "Mixed",
            "Delete"
          ],
          "default": "Mixed",
          "deprecateAliases": true,
          "aliases": [
            "upgradetype"
          ]
        },
        "skip-handlers": {
          "name": "skip-handlers",
          "type": "option",
          "char": "l",
          "summary": "Skip install handlers (available handlers: FeatureEnforcement).",
          "description": "Allows the installer of a package to optionally skip install handlers in order to decrease overall installation time (available handlers: FeatureEnforcement).",
          "hidden": true,
          "multiple": true,
          "options": [
            "FeatureEnforcement"
          ],
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package:list": {
      "id": "package:list",
      "summary": "List all packages in the Dev Hub org.",
      "description": "Description",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:list",
        "force:package:list"
      ],
      "examples": [
        "List all packages in the specified Dev Hub org:\n<%= config.bin %> <%= command.id %> --target-dev-hub devhub@example.com",
        "List all packages details in the specified Dev Hub org, and show extended details about each package:\n<%= config.bin %> <%= command.id %> --target-dev-hub devhub@example.com --verbose"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "Display extended package detail.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:uninstall": {
      "id": "package:uninstall",
      "summary": "Uninstall a second-generation package from the target org.",
      "description": "Specify the package ID for a second-generation package.\n\nTo list the orgâ€™s installed packages, run \"<%= config.bin %> package installed list\".\n\nTo uninstall a first-generation package, from Setup, enter Installed Packages in the Quick Find box, then select Installed Packages.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:uninstall",
        "force:package:uninstall"
      ],
      "examples": [
        "Uninstall a package with specified ID from an org with username me@example.com:\n<%= config.bin %> <%= command.id %> --package 04t... --target-org me@example.com",
        "Uninstall a package with the specified alias from your default org:\n<%= config.bin %> <%= command.id %> --package undesirable_package_alias",
        "Uninstall a package with an alias that contains spaces from your default org:\n<%= config.bin %> <%= command.id %> --package \"Undesirable Package Alias\""
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Number of minutes to wait for uninstall status.",
          "multiple": false,
          "default": {
            "quantity": 0,
            "unit": 0
          },
          "deprecateAliases": true
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 04t) or alias of the package version to uninstall.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package:update": {
      "id": "package:update",
      "summary": "Update package details.",
      "description": "Specify a new value for each option you want to update.\n\nRun \"<%= config.bin %> package list\" to list all packages in the Dev Hub org.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:update",
        "force:package:update"
      ],
      "examples": [
        "Update the name of the package with the specified alias; uses your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package \"Your Package Alias\" --name \"New Package Name\"",
        "Update the description of the package with the specified ID; uses the specified Dev Hub org:\n<%= config.bin %> <%= command.id %> --package 0Ho... --description \"New Package Description\" --target-dev-hub devhub@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 0Ho) or alias of the package to update.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "New name of the package.",
          "multiple": false,
          "deprecateAliases": true
        },
        "description": {
          "name": "description",
          "type": "option",
          "char": "d",
          "summary": "New description of the package.",
          "multiple": false,
          "deprecateAliases": true
        },
        "error-notification-username": {
          "name": "error-notification-username",
          "type": "option",
          "char": "o",
          "summary": "Active Dev Hub user designated to receive email notifications for package errors.",
          "description": "Email notifications include information about unhandled Apex exceptions, and install, upgrade, or uninstall failures associated with your package.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "errornotificationusername"
          ]
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:install:report": {
      "id": "package:install:report",
      "summary": "Retrieve the status of a package installation request.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:install:report",
        "force:package:install:report"
      ],
      "examples": [
        "Retrieve the status of a package installation request with the specified ID on your default org:\n<%= config.bin %> <%= command.id %> --request-id 0Hf...",
        "Similar to previous example, except use the org with username me@example.com:\n<%= config.bin %> <%= command.id %> --request-id 0Hf... --target-org me@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "request-id": {
          "name": "request-id",
          "type": "option",
          "char": "i",
          "summary": "ID of the package install request you want to check; starts with 0Hf.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "requestid"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package:installed:list": {
      "id": "package:installed:list",
      "summary": "List the orgâ€™s installed packages.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:installed:list",
        "force:package:installed:list"
      ],
      "examples": [
        "List the installed packages in your default org:\n<%= config.bin %> <%= command.id %>",
        "List the installed packages in the org with username me@example.com:\n<%= config.bin %> <%= command.id %> --target-org me@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:uninstall:report": {
      "id": "package:uninstall:report",
      "summary": "Retrieve the status of a package uninstall request.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:uninstall:report",
        "force:package:uninstall:report"
      ],
      "examples": [
        "Retrieve the status of a package uninstall in your default org using the specified request ID:\n<%= config.bin %> <%= command.id %> --request-id 06y...",
        "Similar to previous example, but use the org with username me@example.com:\n<%= config.bin %> <%= command.id %> --request-id 06y... --target-org me@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "request-id": {
          "name": "request-id",
          "type": "option",
          "char": "i",
          "summary": "ID of the package uninstall request you want to check; starts with 06y.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "requestid"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package:version:create": {
      "id": "package:version:create",
      "summary": "Create a package version in the Dev Hub org.",
      "description": "The package version is based on the package contents in the specified directory.\n\nTo retrieve details about a package version create request, including status and package version ID (04t), run \"<%= config.bin %> package version create report -i 08c...\".\n\nWe recommend that you specify the --installation-key parameter to protect the contents of your package and to prevent unauthorized installation of your package.\n\nTo list package version creation requests in the org, run \"<%= config.bin %> package version create list\".\nTo promote a package version to released, you must use the --code-coverage parameter. The package must also meet the code coverage requirements. This requirement applies to both managed and unlocked packages.\n\nWe donâ€™t calculate code coverage for org-dependent unlocked packages, or for package versions that specify --skip-validation.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:create",
        "force:package:version:create"
      ],
      "examples": [
        "Create a package version from the contents of the \"common\" directory and give it an installation key of \"password123\"; uses your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --path common --installation-key password123",
        "Create a package version from a package with the specified alias; uses the Dev Hub org with username devhub@example.com:\n<%= config.bin %> <%= command.id %> --package \"Your Package Alias\" --installation-key password123 --target-dev-hub devhub@example.com",
        "Create a package version from a package with the specified ID:\n<%= config.bin %> <%= command.id %> --package 0Ho... --installation-key password123",
        "Create a package version and skip the validation step:\n<%= config.bin %> <%= command.id %> --path common --installation-key password123 --skip-validation"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "branch": {
          "name": "branch",
          "type": "option",
          "char": "b",
          "summary": "Name of the branch in your source control system that the package version is based on.",
          "multiple": false,
          "deprecateAliases": true
        },
        "build-instance": {
          "name": "build-instance",
          "type": "option",
          "char": "s",
          "summary": "Instance where the package version will be created, such as NA50.",
          "hidden": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "buildinstance"
          ]
        },
        "code-coverage": {
          "name": "code-coverage",
          "type": "boolean",
          "char": "c",
          "summary": "Calculate and store the code coverage percentage by running the packaged Apex tests included in this package version.",
          "description": "Before you can promote and release a managed or unlocked package version, the Apex code must meet a minimum 75% code coverage requirement. We donâ€™t calculate code coverage for org-dependent unlocked packages or for package versions that specify --skip-validation.",
          "allowNo": false,
          "exclusive": [
            "skip-validation"
          ],
          "deprecateAliases": true,
          "aliases": [
            "codecoverage"
          ]
        },
        "definition-file": {
          "name": "definition-file",
          "type": "option",
          "char": "f",
          "summary": "Path to a definition file similar to scratch org definition file that contains the list of features and org preferences that the metadata of the package version depends on.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "definitionfile"
          ]
        },
        "installation-key": {
          "name": "installation-key",
          "type": "option",
          "char": "k",
          "summary": "Installation key for key-protected package. (either --installation-key or --installation-key-bypass is required)",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "installationkey"
          ]
        },
        "installation-key-bypass": {
          "name": "installation-key-bypass",
          "type": "boolean",
          "char": "x",
          "summary": "Bypass the installation key requirement. (either --installation-key or --installation-key-bypass is required)",
          "description": "If you bypass this requirement, anyone can install your package.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "installationkeybypass"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 0Ho) or alias of the package to create a version of.",
          "multiple": false,
          "deprecateAliases": true
        },
        "path": {
          "name": "path",
          "type": "option",
          "char": "d",
          "summary": "Path to the directory that contains the contents of the package.",
          "multiple": false,
          "deprecateAliases": true
        },
        "post-install-script": {
          "name": "post-install-script",
          "type": "option",
          "summary": "Name of the post-install script; applies to managed packages only.",
          "description": "The post-install script is an Apex class within this package that is run in the installing org after installations or upgrades of this package version.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "postinstallscript"
          ]
        },
        "post-install-url": {
          "name": "post-install-url",
          "type": "option",
          "summary": "Post-install instructions URL.",
          "description": "The contents of the post-installation instructions URL are displayed in the UI after installation of the package version.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "postinstallurl"
          ]
        },
        "preserve": {
          "name": "preserve",
          "type": "boolean",
          "char": "r",
          "summary": "Preserve temp files that would otherwise be deleted.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true
        },
        "releasenotes-url": {
          "name": "releasenotes-url",
          "type": "option",
          "summary": "Release notes URL.",
          "description": "This link is displayed in the package installation UI to provide release notes for this package version to subscribers.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "releasenotesurl"
          ]
        },
        "skip-ancestor-check": {
          "name": "skip-ancestor-check",
          "type": "boolean",
          "summary": "Overrides ancestry requirements, which allows you to specify a package ancestor that isnâ€™t the highest released package version.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "skipancestorcheck"
          ]
        },
        "skip-validation": {
          "name": "skip-validation",
          "type": "boolean",
          "summary": "Skip validation during package version creation; you canâ€™t promote unvalidated package versions.",
          "description": "Skips validation of dependencies, package ancestors, and metadata during package version creation. Skipping validation reduces the time it takes to create a new package version, but you can promote only validated package versions. Skipping validation can suppress important errors that can surface at a later stage. You can specify skip validation or code coverage, but not both. Code coverage is calculated during validation.",
          "allowNo": false,
          "exclusive": [
            "code-coverage"
          ],
          "deprecateAliases": true,
          "aliases": [
            "skipvalidation"
          ]
        },
        "tag": {
          "name": "tag",
          "type": "option",
          "char": "t",
          "summary": "Package versionâ€™s tag.",
          "multiple": false,
          "deprecateAliases": true
        },
        "uninstall-script": {
          "name": "uninstall-script",
          "type": "option",
          "summary": "Uninstall script name; applies to managed packages only.",
          "description": "The uninstall script is an Apex class within this package that is run in the installing org after uninstallations of this package.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "uninstallscript"
          ]
        },
        "validate-schema": {
          "name": "validate-schema",
          "type": "boolean",
          "char": "j",
          "summary": "Validate the sfdx-project.json file against the JSON schema.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "validateschema"
          ]
        },
        "version-description": {
          "name": "version-description",
          "type": "option",
          "char": "e",
          "summary": "Description of the package version to be created; overrides the sfdx-project.json value.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "versiondescription"
          ]
        },
        "version-name": {
          "name": "version-name",
          "type": "option",
          "char": "a",
          "summary": "Name of the package version to be created; overrides the sfdx-project.json value.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "versionname"
          ]
        },
        "version-number": {
          "name": "version-number",
          "type": "option",
          "char": "n",
          "summary": "Version number of the package version to be created; overrides the sfdx-project.json value.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "versionnumber"
          ]
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Number of minutes to wait for the package version to be created.",
          "multiple": false,
          "default": {
            "quantity": 0,
            "unit": 0
          },
          "deprecateAliases": true
        },
        "language": {
          "name": "language",
          "type": "option",
          "summary": "Language for the package.",
          "description": "Specify the language using a language code listed under \"Supported Languages\" in Salesforce Help. If no language is specified, the language defaults to the language of the Dev Hub user who created the package.",
          "multiple": false,
          "deprecateAliases": true
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "Display verbose command output.",
          "description": "Display verbose command output. When polling for the status of the creation, this will output status and timeout data on a separate line for each poll request, which is useful in CI systems where timeouts can occur with long periods of no output from commands.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:version:delete": {
      "id": "package:version:delete",
      "summary": "Delete a package version.",
      "description": "Specify the ID or alias of the package version you want to delete.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:delete",
        "force:package:version:delete"
      ],
      "examples": [
        "Delete a package version with the specified alias using your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package \"Your Package Alias\"",
        "Delete a package version with the specified ID using the Dev Hub org with username \"devhub@example.com\":\n<%= config.bin %> <%= command.id %> --package 04t... --target-org devhub@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "char": "n",
          "summary": "Donâ€™t prompt before deleting the package version.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "noprompt"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 04t) or alias of the package version to delete.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "undelete": {
          "name": "undelete",
          "type": "boolean",
          "summary": "Undelete a deleted package version.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:version:displayancestry": {
      "id": "package:version:displayancestry",
      "summary": "Display the ancestry tree for a 2GP managed package version.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:displayancestry",
        "force:package:version:displayancestry"
      ],
      "examples": [
        "Display the ancestry tree for a package version with the specified alias, using your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package package_version_alias",
        "Similar to previous example, but display the output in DOT code:\n<%= config.bin %> <%= command.id %> --package package_version_alias --dot-code",
        "Display the ancestry tree for a package with the specified ID, using the Dev Hub org with username devhub@example.com:\n<%= config.bin %> <%= command.id %> --package OHo... --target-dev-hub devhub@example.com",
        "Display the ancestry tree of a package version with the specified ID, using your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package 04t..."
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID or alias of the package (starts with 0Ho) or package version (starts with 04t) to display ancestry for.",
          "description": "If you specify a package ID (starts with 0Ho) or alias, the ancestor tree for every package version associated with the package ID is displayed. If you specify a package version (starts with 04t) or alias, the ancestry tree of the specified package version is displayed.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "dot-code": {
          "name": "dot-code",
          "type": "boolean",
          "summary": "Display the ancestry tree in DOT code.",
          "description": "You can use the DOT code output in graph visualization software to create tree visualizations.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "dotcode"
          ]
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "Display both the package version ID (starts with 04t) and the version number (major.minor.patch.build) in the ancestry tree.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:version:list": {
      "id": "package:version:list",
      "summary": "List all package versions in the Dev Hub org.",
      "description": "Description",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:list",
        "force:package:version:list"
      ],
      "examples": [
        "List package versions in your default Dev Hub org that were created in the last 3 days; show only the released versions and order the list using the PatchVersion field. Display extended details about each package version:\n<%= config.bin %> <%= command.id %> --verbose --created-last-days 3 --released --order-by PatchVersion",
        "List the released package versions for the two specified packages that were modified today; use the Dev Hub org with username devhub@example.com:\n<%= config.bin %> <%= command.id %> --packages 0Ho000000000000,0Ho000000000001 --released --modified-last-days 0 --target-dev-hub devhub@example.com",
        "List all released package versions in your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --released",
        "List package versions that were modified today in your default Dev Hub org; show limited details about each one:\n<%= config.bin %> <%= command.id %> --concise --modified-last-days 0",
        "List released package versions that were created in the last 3 days in your default Dev Hub org; show limited details:\n<%= config.bin %> <%= command.id %> --concise --created-last-days 3 --released",
        "List released package versions that were modified today for the two packages with specified aliases in your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --packages exp-mgr,exp-mgr-util --released --modified-last-days 0"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "created-last-days": {
          "name": "created-last-days",
          "type": "option",
          "char": "c",
          "summary": "Number of days since the request was created, starting at 00:00:00 of first day to now. Use 0 for today.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "createdlastdays"
          ]
        },
        "concise": {
          "name": "concise",
          "type": "boolean",
          "summary": "Display limited package version details.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "modified-last-days": {
          "name": "modified-last-days",
          "type": "option",
          "char": "m",
          "summary": "Number of days since the items were modified, starting at 00:00:00 of first day to now. Use 0 for today.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "modifiedlastdays"
          ]
        },
        "packages": {
          "name": "packages",
          "type": "option",
          "char": "p",
          "summary": "Comma-delimited list of packages (aliases or 0Ho IDs) to list.",
          "multiple": false,
          "deprecateAliases": true
        },
        "released": {
          "name": "released",
          "type": "boolean",
          "char": "r",
          "summary": "Display released versions only (IsReleased=true).",
          "allowNo": false,
          "deprecateAliases": true
        },
        "order-by": {
          "name": "order-by",
          "type": "option",
          "char": "o",
          "summary": "Package version fields used to order the list.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "orderby"
          ]
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "Display extended package version details.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package:version:promote": {
      "id": "package:version:promote",
      "summary": "Promote a package version to released.",
      "description": "Supply the ID or alias of the package version you want to promote. Promotes the package version to released status.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:promote",
        "force:package:version:promote"
      ],
      "examples": [
        "Promote the package version with the specified ID to released; uses your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package 04t...",
        "Promote the package version with the specified alias to released; uses the Dev Hub org with username devhub@example.com:\n<%= config.bin %> <%= command.id %> --package awesome_package_alias --target-dev-hub devhub@example.com",
        "Promote the package version with an alias that has spaces to released:\n<%= config.bin %> <%= command.id %> --package \"Awesome Package Alias\""
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 04t) or alias of the package version to promote.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "no-prompt": {
          "name": "no-prompt",
          "type": "boolean",
          "char": "n",
          "summary": "Don't prompt to confirm setting the package version as released.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "noprompt"
          ]
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:version:report": {
      "id": "package:version:report",
      "summary": "Retrieve details about a package version in the Dev Hub org.",
      "description": "To update package version values, run \"<%= config.bin %> package version update\".",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:report",
        "force:package:version:report"
      ],
      "examples": [
        "Retrieve details about the package version with the specified ID from your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package 04t...",
        "Retrieve details about the package version with the specified alias (that contains spaces) from the Dev Hub org with username devhub@example.com:\n<%= config.bin %> <%= command.id %> --package \"Your Package Alias\" --target-dev-hub devhub@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 04t) or alias of the package to retrieve details for.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "verbose": {
          "name": "verbose",
          "type": "boolean",
          "summary": "Display extended package version details.",
          "allowNo": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package:version:update": {
      "id": "package:version:update",
      "summary": "Update a package version.",
      "description": "Specify a new value for each option you want to update.\n\nTo display details about a package version, run \"<%= config.bin %> package version display\".",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:update",
        "force:package:version:update"
      ],
      "examples": [
        "Update the package version that has the specified alias (that contains spaces) with a new installation key \"password123\"; uses your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package \"Your Package Alias\" --installation-key password123",
        "Update the package version that has the specified ID with a new branch and tag; use the Dev Hub org with username devhub@example.com:\n<%= config.bin %> <%= command.id %> --package 04t... --branch main --tag 'Release 1.0.7' --target-dev-hub devhub@example.com",
        "Update the package version that has the specified ID with a new description:\n<%= config.bin %> <%= command.id %> --package 04t... --version-description \"New Package Version Description\""
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package": {
          "name": "package",
          "type": "option",
          "char": "p",
          "summary": "ID (starts with 04t) or alias of the package to update a version of.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "version-name": {
          "name": "version-name",
          "type": "option",
          "char": "a",
          "summary": "New package version name.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "versionname"
          ]
        },
        "version-description": {
          "name": "version-description",
          "type": "option",
          "char": "e",
          "summary": "New package version description.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "versiondescription"
          ]
        },
        "branch": {
          "name": "branch",
          "type": "option",
          "char": "b",
          "summary": "New package version branch.",
          "multiple": false,
          "deprecateAliases": true
        },
        "tag": {
          "name": "tag",
          "type": "option",
          "char": "t",
          "summary": "New package version tag.",
          "multiple": false,
          "deprecateAliases": true
        },
        "installation-key": {
          "name": "installation-key",
          "type": "option",
          "char": "k",
          "summary": "New installation key for key-protected package (default: null)",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "installationkey"
          ]
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package1:version:create": {
      "id": "package1:version:create",
      "summary": "Create a first-generation package version in the release org.",
      "description": "The package version is based on the contents of the specified metadata package. Omit --managed-released if you want to create an unmanaged package version.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package1:beta:version:create",
        "force:package1:version:create"
      ],
      "examples": [
        "Create a first-generation package version from the package with the specified ID and name the package version \"example\"; use your default org:\n<%= config.bin %> <%= command.id %> --package-id 033... --name example",
        "Same as previous example, but provide a description and wait for 30 minutes for the package version to be created; use the specified org:\n<%= config.bin %> <%= command.id %> --package-id 033... --name example --description \"example description\" --wait 30 --target-org myorg@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package-id": {
          "name": "package-id",
          "type": "option",
          "char": "i",
          "summary": "ID of the metadata package (starts with 033) of which youâ€™re creating a new version.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "packageid"
          ]
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Package version name.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "description": {
          "name": "description",
          "type": "option",
          "char": "d",
          "summary": "Package version description.",
          "multiple": false,
          "deprecateAliases": true
        },
        "version": {
          "name": "version",
          "type": "option",
          "char": "v",
          "summary": "Package version in major.minor format, for example, 3.2.",
          "multiple": false,
          "deprecateAliases": true
        },
        "managed-released": {
          "name": "managed-released",
          "type": "boolean",
          "char": "m",
          "summary": "Create a managed package version.",
          "description": "To create a beta version, donâ€™t include this parameter.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "managedrelease"
          ]
        },
        "release-notes-url": {
          "name": "release-notes-url",
          "type": "option",
          "char": "r",
          "summary": "Release notes URL.",
          "description": "This link is displayed in the package installation UI to provide release notes for this package version to subscribers.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "releasenotesurl"
          ]
        },
        "post-install-url": {
          "name": "post-install-url",
          "type": "option",
          "char": "p",
          "summary": "Post install URL.",
          "description": "The contents of the post-installation instructions URL are displayed in the UI after installation of the package version.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "postinstallurl"
          ]
        },
        "installation-key": {
          "name": "installation-key",
          "type": "option",
          "char": "k",
          "summary": "Installation key for key-protected package (default: null).",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "installationkey"
          ]
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Minutes to wait for the package version to be created (default: 2 minutes).",
          "multiple": false,
          "deprecateAliases": true
        }
      },
      "args": {},
      "requiresProject": true,
      "hasDynamicHelp": true
    },
    "package1:version:display": {
      "id": "package1:version:display",
      "summary": "Display details about a first-generation package version.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package1:beta:version:display",
        "force:package1:version:display"
      ],
      "examples": [
        "Display details about the first-generation package version with the specified ID in your default org:\n<%= config.bin %> <%= command.id %> --package-version-id 04t...",
        "Same as previous example, but use the specified org:\n<%= config.bin %> <%= command.id %> --package-version-id 04t... --target-org myorg@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package-version-id": {
          "name": "package-version-id",
          "type": "option",
          "char": "i",
          "summary": "ID (starts with 04t) of the metadata package version whose details you want to display.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "packageversionid"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package1:version:list": {
      "id": "package1:version:list",
      "summary": "List package versions for the specified first-generation package or for the org.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package1:beta:version:list",
        "force:package1:version:list"
      ],
      "examples": [
        "List all first-generation package versions in your default org:\n<%= config.bin %> <%= command.id %>",
        "List package versions for the specified first-generation package in the specifief org:\n<%= config.bin %> <%= command.id %> --package-id 033... --target-org myorg@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package-id": {
          "name": "package-id",
          "type": "option",
          "char": "i",
          "summary": "Metadata package ID (starts with 033) whose package versions you want to list.",
          "description": "If not specified, shows all versions for all packages (managed and unmanaged) in the org.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "packageid"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package:version:create:list": {
      "id": "package:version:create:list",
      "summary": "List package version creation requests.",
      "description": "Shows the details of each request to create a package version in the Dev Hub org.\n\nAll filter parameters are applied using the AND logical operator (not OR).\n\nTo get information about a specific request, run \"<%= config.bin %> package version create report\" and supply the request ID.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:create:list",
        "force:package:version:create:list"
      ],
      "examples": [
        "List all package version creation requests in your default Dev Hub org:\n<%= config.bin %> <%= command.id %>",
        "List package version creation requests from the last 3 days in the Dev Hub org with username devhub@example.com:\n<%= config.bin %> <%= command.id %> --created-last-days 3 --target-dev-hub",
        "List package version creation requests with status Error:\n<%= config.bin %> <%= command.id %> --status Error",
        "List package version creation requests with status InProgress:\n<%= config.bin %> <%= command.id %> --status InProgress",
        "List package version creation requests with status Success that were created today:\n<%= config.bin %> <%= command.id %> --created-last-days 0 --status Success"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "created-last-days": {
          "name": "created-last-days",
          "type": "option",
          "char": "c",
          "summary": "Number of days since the request was created, starting at 00:00:00 of first day to now. Use 0 for today.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "createdlastdays"
          ]
        },
        "status": {
          "name": "status",
          "type": "option",
          "char": "s",
          "summary": "Status of the version creation request, used to filter the list.",
          "multiple": false,
          "options": [
            "Queued",
            "InProgress",
            "Success",
            "Error"
          ],
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package:version:create:report": {
      "id": "package:version:create:report",
      "summary": "Retrieve details about a package version creation request.",
      "description": "Specify the request ID for which you want to view details. If applicable, the command displays errors related to the request.\n\nTo show all requests in the org, run \"<%= config.bin %> package version create list\".",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package:beta:version:create:report",
        "force:package:version:create:report"
      ],
      "examples": [
        "Retrieve details about the package version creation request with the specified ID; uses your default Dev Hub org:\n<%= config.bin %> <%= command.id %> --package-create-request-id 08c...",
        "Retrieve details about the specified package version creation request in the Dev Hub org with username devhub@example.com:\n<%= config.bin %> <%= command.id %> --package-create-request-id 08c... --target-dev-hub devhub@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername",
            "target-hub-org"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "package-create-request-id": {
          "name": "package-create-request-id",
          "type": "option",
          "char": "i",
          "summary": "ID (starts with 08c) of the package version creation request you want to display.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "packagecreaterequestid"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "package1:version:create:get": {
      "id": "package1:version:create:get",
      "summary": "Retrieve the status of a package version creation request.",
      "strict": true,
      "pluginName": "@salesforce/plugin-packaging",
      "pluginAlias": "@salesforce/plugin-packaging",
      "pluginType": "core",
      "aliases": [
        "force:package1:beta:version:create:get",
        "force:package1:version:create:get"
      ],
      "examples": [
        "Get the status of the creation request for the package version with the specified ID in your default org:\n<%= config.bin %> <%= command.id %> --request-id 0HD...",
        "Same as previous example, but use the specified org:\n<%= config.bin %> <%= command.id %> --request-id 0HD... --target-org myorg@example.com"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "request-id": {
          "name": "request-id",
          "type": "option",
          "char": "i",
          "summary": "ID of the PackageUploadRequest (starts with 0HD).",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "requestid"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    }
  }
}