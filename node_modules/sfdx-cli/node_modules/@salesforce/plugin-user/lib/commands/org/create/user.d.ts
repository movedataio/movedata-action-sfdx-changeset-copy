import { SfCommand } from '@salesforce/sf-plugins-core';
import { Interfaces } from '@oclif/core';
export declare class CreateUserCommand extends SfCommand<CreateUserOutput> {
    static strict: boolean;
    static readonly deprecateAliases = true;
    static readonly aliases: string[];
    static readonly summary: string;
    static readonly description: string;
    static readonly examples: string[];
    static readonly flags: {
        'set-alias': Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'definition-file': Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'set-unique-username': Interfaces.BooleanFlag<boolean>;
        'target-dev-hub': {
            hidden: boolean;
            deprecated: {
                message: string;
            };
            name: string;
            char?: Interfaces.AlphabetUppercase | Interfaces.AlphabetLowercase | undefined;
            summary?: string | undefined;
            description?: string | undefined;
            helpLabel?: string | undefined;
            helpGroup?: string | undefined;
            env?: string | undefined;
            required?: boolean | undefined;
            dependsOn?: string[] | undefined;
            exclusive?: string[] | undefined;
            exactlyOne?: string[] | undefined;
            relationships?: import("@oclif/core/lib/interfaces/parser").Relationship[] | undefined;
            aliases?: string[] | undefined;
            deprecateAliases?: boolean | undefined;
            delimiter?: "," | undefined;
            type: "option";
            helpValue?: string | undefined;
            options?: string[] | undefined;
            multiple: false;
            parse: import("@oclif/core/lib/interfaces/parser").FlagParser<import("@salesforce/core").Org | undefined, string, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
            defaultHelp?: import("@oclif/core/lib/interfaces/parser").FlagDefaultHelp<import("@salesforce/core").Org | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
            input: string[];
            default?: import("@oclif/core/lib/interfaces/parser").FlagDefault<import("@salesforce/core").Org | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        } | {
            hidden: boolean;
            deprecated: {
                message: string;
            };
            name: string;
            char?: Interfaces.AlphabetUppercase | Interfaces.AlphabetLowercase | undefined;
            summary?: string | undefined;
            description?: string | undefined;
            helpLabel?: string | undefined;
            helpGroup?: string | undefined;
            env?: string | undefined;
            required?: boolean | undefined;
            dependsOn?: string[] | undefined;
            exclusive?: string[] | undefined;
            exactlyOne?: string[] | undefined;
            relationships?: import("@oclif/core/lib/interfaces/parser").Relationship[] | undefined;
            aliases?: string[] | undefined;
            deprecateAliases?: boolean | undefined;
            delimiter?: "," | undefined;
            type: "option";
            helpValue?: string | undefined;
            options?: string[] | undefined;
            multiple: true;
            parse: import("@oclif/core/lib/interfaces/parser").FlagParser<import("@salesforce/core").Org | undefined, string, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
            defaultHelp?: import("@oclif/core/lib/interfaces/parser").FlagDefaultHelp<import("@salesforce/core").Org | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
            input: string[];
            default?: import("@oclif/core/lib/interfaces/parser").FlagDefault<(import("@salesforce/core").Org | undefined)[] | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        };
        'target-org': Interfaces.OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'api-version': Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        loglevel: Interfaces.OptionFlag<string | undefined, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
    };
    private targetOrgUser;
    private successes;
    private failures;
    private newUserAuthInfo;
    private logger;
    private flags;
    private varargs;
    /**
     * removes fields that cause errors in salesforce APIs within sfdx-core's createUser method
     *
     * @param fields a list of combined fields from varargs and the config file
     * @private
     */
    private static stripInvalidAPIFields;
    run(): Promise<CreateUserOutput>;
    private catchCreateUser;
    private aggregateFields;
    private print;
    private setExitCode;
}
export default CreateUserCommand;
export interface CreateUserOutput {
    orgId: string;
    permissionSetAssignments: string[];
    fields: Record<string, unknown>;
}
