{
  "version": "2.3.8",
  "commands": {
    "org:assign:permset": {
      "id": "org:assign:permset",
      "summary": "Assign a permission set to one or more users of a scratch org.",
      "description": "To specify an alias for the --target-org or --on-behalf-of flags, use the CLI username alias, such as the one you set with the \"alias set\" command. Don't use the value of the Alias field of the User Salesforce object for the org user.\n\nTo assign multiple permission sets, either set multiple --name flags or a single --name flag with multiple names separated by spaces. Enclose names that contain spaces in one set of double quotes. The same syntax applies to --on-behalf-of.",
      "strict": true,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "Assign two permission sets called DreamHouse and LargeDreamHouse to original admin user of your default scratch org:\n<%= config.bin %> <%= command.id %> --name DreamHouse --name LargeDreamHouse",
        "Assign the Dreamhouse permission set to the original admin user of the scratch org with alias \"my-scratch\":\n<%= config.bin %> <%= command.id %> --name DreamHouse --target-org my-scratch",
        "Assign the Dreamhouse permission set to the specified list of users of your default scratch org:\n<%= config.bin %> <%= command.id %> --name DreamHouse --on-behalf-of user1@my.org --on-behalf-of user2 --on-behalf-of user"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Permission set to assign.",
          "required": true,
          "multiple": true,
          "aliases": [
            "permsetname"
          ]
        },
        "on-behalf-of": {
          "name": "on-behalf-of",
          "type": "option",
          "char": "b",
          "summary": "Username or alias to assign the permission set to.",
          "multiple": true,
          "aliases": [
            "onbehalfof"
          ]
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Scratch org alias or login user.",
          "required": true,
          "multiple": false
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:assign:permsetlicense": {
      "id": "org:assign:permsetlicense",
      "summary": "Assign a permission set license to one or more users of a scratch org.",
      "description": "To specify an alias for the --target-org or --on-behalf-of flags, use the CLI username alias, such as the one you set with the \"alias set\" command. Don't use the value of the Alias field of the User Salesforce object for the org user.\n\nTo assign multiple permission sets, either set multiple --name flags or a single --name flag with multiple names separated by spaces. Enclose names that contain spaces in one set of double quotes. The same syntax applies to --on-behalf-of.",
      "strict": true,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "Assign the DreamHouse permission set license to original admin user of your default scratch org:\n<%= config.bin %> <%= command.id %> --name DreamHouse",
        "Assign the Dreamhouse permission set license to the original admin user of the scratch org with alias \"my-scratch\":\n<%= config.bin %> <%= command.id %> --name DreamHouse --target-org my-scratch",
        "Assign the Dreamhouse permission set license to the specified list of users of your default scratch org:\n<%= config.bin %> <%= command.id %> --name DreamHouse --on-behalf-of user1@my.org --on-behalf-of user2 --on-behalf-of user3"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the permission set license to assign.",
          "required": true,
          "multiple": false,
          "aliases": [
            "perm-set-license",
            "psl"
          ]
        },
        "on-behalf-of": {
          "name": "on-behalf-of",
          "type": "option",
          "char": "b",
          "summary": "Usernames or alias to assign the permission set license to.",
          "multiple": true,
          "aliases": [
            "onbehalfof"
          ],
          "delimiter": ","
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Scratch org alias or login user.",
          "required": true,
          "multiple": false
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:create:user": {
      "id": "org:create:user",
      "summary": "Create a user for a scratch org.",
      "description": "A scratch org includes one administrator user by default. For testing purposes, however, you sometimes need to create additional users.\n\nThe easiest way to create a user is to let this command assign default or generated characteristics to the new user. If you want to customize your new user, create a definition file and specify it with the --definition-file flag. In the file, you can include all the User sObject (SSalesforce object) fields and Salesforce DX-specific options, as described in \"User Definition File for Customizing a Scratch Org User\" (https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_users_def_file.htm). You can also specify these options on the command line.\n\nIf you don't customize your new user, this command creates a user with the following default characteristics:\n\n    * The username is the existing administrator’s username prepended with a timestamp, such as 1505759162830_test-wvkpnfm5z113@example.com.\n    * The user’s profile is Standard User.\n    * The values of the required fields of the User sObject are the corresponding values of the administrator user.\n    * The user has no password.\n\nUse the --set-alias flag to assign a simple name to the user that you can reference in later CLI commands. When this command completes, it displays the new username and user ID. Run the \"<%= config.bin %> org user display\" command to get more information about the new user.\n\nFor more information about user limits, defaults, and other considerations when creating a new scratch org user, see https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_users.htm.",
      "strict": false,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "aliases": [
        "force:user:create"
      ],
      "examples": [
        "Create a user for your default scratch org and let this command generate a username, user ID, and other characteristics:\n<%= config.bin %> <%= command.id %>",
        "Create a user with alias \"testuser1\" using a user definition file. Set the \"profileName\" option to \"Chatter Free User\", which overrides the value in the defintion file if it also exists there. Create the user for the scratch org with alias \"my-scratch\":\n<%= config.bin %> <%= command.id %> --set-alias testuser1 --definition-file config/project-user-def.json profileName='Chatter Free User' --target-org my-scratch",
        "Create a user by specifying the username, email, and perm set assignment at the command line; command fails if the username already exists in Salesforce:\n<%= config.bin %> <%= command.id %> username=testuser1@my.org email=me@my.org permsets=DreamHouse",
        "Create a user with a definition file, set the email value as specified (overriding any value in the definition file), and generate a password for the user. If the username in the definition file isn't unique, the command appends the org ID to make it unique:\n<%= config.bin %> <%= command.id %> --definition-file config/project-user-def.json email=me@my.org generatepassword=true --set-unique-username"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "set-alias": {
          "name": "set-alias",
          "type": "option",
          "char": "a",
          "summary": "Set an alias for the created username to reference in other CLI commands.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "setalias"
          ]
        },
        "definition-file": {
          "name": "definition-file",
          "type": "option",
          "char": "f",
          "summary": "File path to a user definition file for customizing the new user.",
          "description": "The user definition file uses JSON format and can include any Salesforce User sObject field and Salesforce DX-specific options. See https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_scratch_orgs_users_def_file.htm for more information.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "definitionfile"
          ]
        },
        "set-unique-username": {
          "name": "set-unique-username",
          "type": "boolean",
          "char": "s",
          "summary": "Force the username, if specified in the definition file or at the command line, to be unique by appending the org ID.",
          "description": "The new user’s username must be unique across all Salesforce orgs and in the form of an email address. If you let this command generate a username for you, it's guaranteed to be unique. If you specify an existing username in a definition file, the command fails. Set this flag to force the username to be unique; as a result, the username might be different than what you specify in the definition file.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "setuniqueusername"
          ]
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "hidden": true,
          "required": false,
          "multiple": false,
          "deprecated": {
            "message": "The --target-dev-hub flag is deprecated and is no longer used by this command. The flag will be removed in API version 57.0 or later."
          },
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername"
          ]
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:display:user": {
      "id": "org:display:user",
      "summary": "Display information about a Salesforce user.",
      "description": "Output includes the profile name, org ID, access token, instance URL, login URL, and alias if applicable.",
      "strict": true,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "aliases": [
        "force:user:display"
      ],
      "examples": [
        "Display information about the admin user of your default scratch org:\n<%= config.bin %> <%= command.id %>",
        "Display information about the specified user and output in JSON format:\n<%= config.bin %> <%= command.id %> --target-org me@my.org --json"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "hidden": true,
          "required": false,
          "multiple": false,
          "deprecated": {
            "message": "The --target-dev-hub flag is deprecated and is no longer used by this command. The flag will be removed in API version\n57.0 or later."
          },
          "deprecateAliases": true,
          "aliases": [
            "targetdevhubusername"
          ]
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:generate:password": {
      "id": "org:generate:password",
      "summary": "Generate a random password for scratch org users.",
      "description": "By default, new scratch orgs contain one admin user with no password. Use the CLI to generate or change a password for any scratch org user. After it's set, you can’t unset a password, you can only change it.\n\nTo change the password strength, set the --complexity flag to a value between 0 and 5. Each value specifies the types of characters used in the generated password:\n\n0 - lower case letters only\n1 - lower case letters and numbers only\n2 - lower case letters and symbols only\n3 - lower and upper case letters and numbers only\n4 - lower and upper case letters and symbols only\n5 - lower and upper case letters and numbers and symbols only\n\nTo see a password that was previously generated, run \"<%= config.bin %> org user display\".",
      "strict": true,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "Generate a password for the original admin user of your default scratch org:\n<%= config.bin %> <%= command.id %>",
        "Generate a password that contains 12 characters for the original admin user of the scratch org with alias \"my-scratch\":\n<%= config.bin %> <%= command.id %> --length 12 --target-org my-scratch",
        "Generate a password for your default scratch org admin user that uses lower and upper case letters and numbers only:\n<%= config.bin %> <%= command.id %> --complexity 3",
        "Generate a password for the specified users in the default scratch org:\n<%= config.bin %> <%= command.id %> --on-behalf-of \"user1@my.org,user2@my.org,user3@my.org\""
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "on-behalf-of": {
          "name": "on-behalf-of",
          "type": "option",
          "char": "b",
          "summary": "Comma-separated list of usernames or aliases to assign the password to.",
          "multiple": true,
          "aliases": [
            "onbehalfof"
          ]
        },
        "length": {
          "name": "length",
          "type": "option",
          "char": "l",
          "summary": "Number of characters in the generated password; valid values are between 8 and 100.",
          "multiple": false,
          "default": 13
        },
        "complexity": {
          "name": "complexity",
          "type": "option",
          "char": "c",
          "summary": "Level of password complexity or strength; the higher the value, the stronger the password.",
          "multiple": false,
          "default": 5
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "org:list:users": {
      "id": "org:list:users",
      "summary": "List all locally-authenticated users of an org.",
      "description": "For scratch orgs, the list includes any users you've created with the \"<%= config.bin %> org create user\" command; the original scratch org admin user is marked with \"(A)\". For other orgs, the list includes the users you used to authenticate to the org.",
      "strict": true,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "aliases": [
        "force:user:list"
      ],
      "examples": [
        "List the locally-authenticated users of your default org:\n<%= config.bin %> <%= command.id %>",
        "List the locally-authenticated users of the specified org:\n<%= config.bin %> <%= command.id %> --target-org me@my.org"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The --target-dev-hub flag is deprecated and is no longer used by this command. The flag will be removed in API version 57.0 or later."
          }
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          }
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "force:user:password:generate": {
      "id": "force:user:password:generate",
      "summary": "Generate a random password for scratch org users.",
      "description": "By default, new scratch orgs contain one admin user with no password. Use the CLI to generate or change a password for any scratch org user. After it's set, you can’t unset a password, you can only change it.\n\nTo change the password strength, set the --complexity flag to a value between 0 and 5. Each value specifies the types of characters used in the generated password:\n\n0 - lower case letters only\n1 - lower case letters and numbers only\n2 - lower case letters and symbols only\n3 - lower and upper case letters and numbers only\n4 - lower and upper case letters and symbols only\n5 - lower and upper case letters and numbers and symbols only\n\nTo see a password that was previously generated, run \"<%= config.bin %> org user display\".",
      "strict": true,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "aliases": [],
      "examples": [
        "Generate a password for the original admin user of your default scratch org:\n<%= config.bin %> <%= command.id %>",
        "Generate a password that contains 12 characters for the original admin user of the scratch org with alias \"my-scratch\":\n<%= config.bin %> <%= command.id %> --length 12 --target-org my-scratch",
        "Generate a password for your default scratch org admin user that uses lower and upper case letters and numbers only:\n<%= config.bin %> <%= command.id %> --complexity 3",
        "Generate a password for the specified users in the default scratch org:\n<%= config.bin %> <%= command.id %> --on-behalf-of \"user1@my.org,user2@my.org,user3@my.org\""
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "on-behalf-of": {
          "name": "on-behalf-of",
          "type": "option",
          "char": "o",
          "summary": "Comma-separated list of usernames or aliases to assign the password to.",
          "multiple": true,
          "aliases": [
            "onbehalfof"
          ],
          "delimiter": ","
        },
        "length": {
          "name": "length",
          "type": "option",
          "char": "l",
          "summary": "Number of characters in the generated password; valid values are between 8 and 100.",
          "multiple": false,
          "default": 13
        },
        "complexity": {
          "name": "complexity",
          "type": "option",
          "char": "c",
          "summary": "Level of password complexity or strength; the higher the value, the stronger the password.",
          "multiple": false,
          "default": 5
        },
        "target-dev-hub": {
          "name": "target-dev-hub",
          "type": "option",
          "char": "v",
          "summary": "Username or alias of the Dev Hub org.",
          "hidden": true,
          "required": false,
          "multiple": false,
          "deprecated": {
            "message": "The --target-dev-hub flag is deprecated and is no longer used by this command. The flag will be removed in API version 57.0 or later."
          },
          "aliases": [
            "targetdevhubusername"
          ]
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "u",
          "summary": "Scratch org alias or login user.",
          "required": true,
          "multiple": false,
          "aliases": [
            "targetusername"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          }
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "force:user:permset:assign": {
      "id": "force:user:permset:assign",
      "summary": "Assign a permission set to one or more users of a scratch org.",
      "description": "To specify an alias for the --target-org or --on-behalf-of flags, use the CLI username alias, such as the one you set with the \"alias set\" command. Don't use the value of the Alias field of the User Salesforce object for the org user.\n\nTo assign multiple permission sets, either set multiple --perm-set-name flags or a single --perm-set-name flag with multiple names separated by spaces. Enclose names that contain spaces in one set of double quotes. The same syntax applies to --on-behalf-of.",
      "strict": true,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "hidden": true,
      "aliases": [],
      "examples": [
        "Assign two permission sets called DreamHouse and LargeDreamHouse to original admin user of your default scratch org:\n<%= config.bin %> <%= command.id %> --perm-set-name DreamHouse --perm-set-name LargeDreamHouse",
        "Assign the Dreamhouse permission set to the original admin user of the scratch org with alias \"my-scratch\":\n<%= config.bin %> <%= command.id %> --perm-set-name DreamHouse --target-org my-scratch",
        "Assign the Dreamhouse permission set to the specified list of users of your default scratch org:\n<%= config.bin %> <%= command.id %> --perm-set-name DreamHouse --on-behalf-of user1@my.org --on-behalf-of user2 --on-behalf-of user"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "perm-set-name": {
          "name": "perm-set-name",
          "type": "option",
          "char": "n",
          "summary": "Permission set to assign.",
          "required": true,
          "multiple": true,
          "aliases": [
            "permsetname"
          ],
          "delimiter": ","
        },
        "on-behalf-of": {
          "name": "on-behalf-of",
          "type": "option",
          "char": "o",
          "summary": "Username or alias to assign the permission set to.",
          "multiple": true,
          "aliases": [
            "onbehalfof"
          ],
          "delimiter": ","
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "u",
          "summary": "Scratch org alias or login user.",
          "required": true,
          "multiple": false,
          "aliases": [
            "targetusername"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          }
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "force:user:permsetlicense:assign": {
      "id": "force:user:permsetlicense:assign",
      "summary": "Assign a permission set license to one or more users of a scratch org.",
      "description": "To specify an alias for the --target-org or --on-behalf-of flags, use the CLI username alias, such as the one you set with the \"alias set\" command. Don't use the value of the Alias field of the User Salesforce object for the org user.\n\nTo assign multiple permission sets, either set multiple --name flags or a single --name flag with multiple names separated by spaces. Enclose names that contain spaces in one set of double quotes. The same syntax applies to --on-behalf-of.",
      "strict": true,
      "pluginName": "@salesforce/plugin-user",
      "pluginAlias": "@salesforce/plugin-user",
      "pluginType": "core",
      "hidden": true,
      "aliases": [],
      "examples": [
        "Assign the DreamHouse permission set license to original admin user of your default scratch org:\n<%= config.bin %> <%= command.id %> --name DreamHouse",
        "Assign the Dreamhouse permission set license to the original admin user of the scratch org with alias \"my-scratch\":\n<%= config.bin %> <%= command.id %> --name DreamHouse --target-org my-scratch",
        "Assign the Dreamhouse permission set license to the specified list of users of your default scratch org:\n<%= config.bin %> <%= command.id %> --name DreamHouse --on-behalf-of user1@my.org --on-behalf-of user2 --on-behalf-of user3"
      ],
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the permission set license to assign.",
          "required": true,
          "multiple": false,
          "aliases": [
            "perm-set-license",
            "psl"
          ]
        },
        "on-behalf-of": {
          "name": "on-behalf-of",
          "type": "option",
          "char": "b",
          "summary": "Usernames or alias to assign the permission set license to.",
          "multiple": true,
          "aliases": [
            "onbehalfof"
          ],
          "delimiter": ","
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "u",
          "summary": "Scratch org alias or login user.",
          "required": true,
          "multiple": false,
          "aliases": [
            "targetusername"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          }
        }
      },
      "args": {},
      "hasDynamicHelp": true
    }
  }
}