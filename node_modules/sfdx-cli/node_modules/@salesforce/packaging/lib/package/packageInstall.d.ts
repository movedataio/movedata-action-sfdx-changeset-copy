import { Connection } from '@salesforce/core';
import { QueryResult } from 'jsforce';
import { Duration } from '@salesforce/kit';
import { PackagingSObjects, PackageInstallCreateRequest, PackageType, PackageInstallOptions } from '../interfaces';
import PackageInstallRequest = PackagingSObjects.PackageInstallRequest;
export declare function createPackageInstallRequest(connection: Connection, pkgInstallCreateRequest: PackageInstallCreateRequest, packageType: PackageType): Promise<PackagingSObjects.PackageInstallRequest>;
export declare function getStatus(connection: Connection, packageInstallRequestId: string): Promise<PackageInstallRequest>;
export declare function isErrorFromSPVQueryRestriction(err: Error): boolean;
export declare function isErrorPackageNotAvailable(err: Error): boolean;
export declare function getInstallationStatus(subscriberPackageVersionId: string, installationKey: string, connection: Connection): Promise<QueryResult<PackagingSObjects.SubscriberPackageVersion>>;
export declare function waitForPublish(connection: Connection, subscriberPackageVersionId: string, frequency: number | Duration, timeout: number | Duration, installationKey?: string): Promise<void>;
export declare function pollStatus(connection: Connection, installRequestId: string, options: PackageInstallOptions): Promise<PackageInstallRequest>;
