"use strict";
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SObjectDescribe = void 0;
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
const core_1 = require("@salesforce/core");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-schema', 'describe');
class SObjectDescribe extends sf_plugins_core_1.SfCommand {
    async run() {
        const { flags } = await this.parse(SObjectDescribe);
        const conn = flags['target-org'].getConnection(flags['api-version']);
        const description = flags['use-tooling-api']
            ? await conn.tooling.describe(flags.sobject)
            : await conn.describe(flags.sobject);
        this.styledJSON(description);
        return description;
    }
}
exports.SObjectDescribe = SObjectDescribe;
SObjectDescribe.summary = messages.getMessage('summary');
SObjectDescribe.description = messages.getMessage('description');
SObjectDescribe.examples = messages.getMessages('examples');
SObjectDescribe.aliases = ['force:schema:sobject:describe'];
SObjectDescribe.flags = {
    'target-org': sf_plugins_core_1.requiredOrgFlagWithDeprecations,
    'api-version': sf_plugins_core_1.orgApiVersionFlagWithDeprecations,
    loglevel: sf_plugins_core_1.loglevel,
    sobject: sf_plugins_core_1.Flags.string({
        char: 's',
        required: true,
        summary: messages.getMessage('flags.sobject.summary'),
        aliases: ['sobjecttype'],
    }),
    'use-tooling-api': sf_plugins_core_1.Flags.boolean({
        char: 't',
        summary: messages.getMessage('flags.tooling-api.summary'),
        aliases: ['usetoolingapi'],
    }),
};
//# sourceMappingURL=describe.js.map