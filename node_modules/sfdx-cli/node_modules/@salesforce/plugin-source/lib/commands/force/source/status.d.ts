import { ChangeResult } from '@salesforce/source-tracking';
import { Interfaces } from '@oclif/core';
import { SfCommand } from '@salesforce/sf-plugins-core';
import { StatusResult } from '../../../formatters/source/statusFormatter';
export type StatusCommandResult = StatusResult[];
export default class Status extends SfCommand<StatusCommandResult> {
    static readonly summary: string;
    static readonly examples: string[];
    static readonly state = "deprecated";
    static readonly deprecationOptions: {
        to: string;
        message: string;
    };
    static readonly flags: {
        'api-version': Interfaces.OptionFlag<string, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        loglevel: Interfaces.OptionFlag<string, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        'target-org': Interfaces.OptionFlag<import("@salesforce/core").Org, import("@oclif/core/lib/interfaces/parser").CustomOptions>;
        local: Interfaces.BooleanFlag<boolean>;
        remote: Interfaces.BooleanFlag<boolean>;
        concise: Interfaces.BooleanFlag<boolean>;
    };
    static readonly requiresProject = true;
    protected results: StatusResult[];
    protected localAdds: ChangeResult[];
    private flags;
    run(): Promise<StatusCommandResult>;
    protected formatResult(): StatusResult[];
}
