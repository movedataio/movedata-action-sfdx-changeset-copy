{
  "version": "2.2.12",
  "commands": {
    "apex:run": {
      "id": "apex:run",
      "summary": "Execute anonymous Apex code entered on the command line or from a local file.",
      "description": "If you don’t run this command from within a Salesforce DX project, you must specify the —-target-org flag.\n\nTo execute your code interactively, run this command with no flags. At the prompt, enter all your Apex code; press CTRL-D when you're finished. Your code is then executed in a single execute anonymous request.\nFor more information, see \"Anonymous Blocks\" in the Apex Developer Guide.",
      "strict": true,
      "pluginName": "@salesforce/plugin-apex",
      "pluginAlias": "@salesforce/plugin-apex",
      "pluginType": "core",
      "aliases": [
        "force:apex:execute"
      ],
      "examples": [
        "Execute the Apex code that's in the ~/test.apex file in the org with the specified username:\n<%= config.bin %> <%= command.id %> --target-org testusername@salesforce.org --file ~/test.apex",
        "Similar to previous example, but execute the code in your default org:\n<%= config.bin %> <%= command.id %> --file ~/test.apex",
        "Run the command with no flags to start interactive mode; the code will execute in your default org when you exit. At the prompt, start type Apex code and press the Enter key after each line. Press CTRL+D when finished.\n<%= config.bin %> <%= command.id %>"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "file": {
          "name": "file",
          "type": "option",
          "char": "f",
          "summary": "Path to a local file that contains Apex code.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apexcodefile"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "apex:get:log": {
      "id": "apex:get:log",
      "summary": "Fetch the specified log or given number of most recent logs from the org.",
      "description": "To get the IDs for your debug logs, run \"<%= config.bin %> apex log list\". Executing this command without flags returns the most recent log.",
      "strict": true,
      "pluginName": "@salesforce/plugin-apex",
      "pluginAlias": "@salesforce/plugin-apex",
      "pluginType": "core",
      "aliases": [
        "force:apex:log:get"
      ],
      "examples": [
        "Fetch the log in your default org using an ID:\n<%= config.bin %> <%= command.id %> --log-id <log id>",
        "Fetch the log in the org with the specified username using an ID:\n<%= config.bin %> <%= command.id %> --log-id <log id> --target-org me@my.org",
        "Fetch the two most recent logs in your default org:\n<%= config.bin %> <%= command.id %> --number 2",
        "Similar to previous example, but save the two log files in the specified directory:\n<%= config.bin %> <%= command.id %> --output-dir /Users/sfdxUser/logs --number 2"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "log-id": {
          "name": "log-id",
          "type": "option",
          "char": "i",
          "summary": "ID of the specific log to display.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "logid"
          ]
        },
        "number": {
          "name": "number",
          "type": "option",
          "char": "n",
          "summary": "Number of the most recent logs to display.",
          "multiple": false,
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the log files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "outputdir",
            "output-directory"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "apex:get:test": {
      "id": "apex:get:test",
      "summary": "Display test results for a specific asynchronous test run.",
      "description": "Provide a test run ID to display test results for an enqueued or completed asynchronous test run. The test run ID is displayed after running the \"<%= config.bin %> apex test run\" command.",
      "strict": true,
      "pluginName": "@salesforce/plugin-apex",
      "pluginAlias": "@salesforce/plugin-apex",
      "pluginType": "core",
      "aliases": [
        "force:apex:test:report"
      ],
      "examples": [
        "Display test results for your default org using a test run ID:\n<%= config.bin %> <%= command.id %> --test-run-id <test run id>",
        "Similar to previous example, but output the result in JUnit format:\n<%= config.bin %> <%= command.id %> --test-run-id <test run id> --result-format junit",
        "Also retrieve code coverage results and output in JSON format:\n<%= config.bin %> <%= command.id %> --test-run-id <test run id> --code-coverage --json",
        "Specify a directory in which to save the test results from the org with the specified username (rather than your default org):\n<%= config.bin %> <%= command.id %> --test-run-id <test run id> --code-coverage --output-dir <path to outputdir> --target-org me@myorg',"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "test-run-id": {
          "name": "test-run-id",
          "type": "option",
          "char": "i",
          "summary": "ID of the test run.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "testrunid"
          ]
        },
        "code-coverage": {
          "name": "code-coverage",
          "type": "boolean",
          "char": "c",
          "summary": "Retrieve code coverage results.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "codecoverage"
          ]
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory in which to store test result files.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "outputdir",
            "output-directory"
          ]
        },
        "result-format": {
          "name": "result-format",
          "type": "option",
          "char": "r",
          "summary": "Format of the results.",
          "multiple": false,
          "options": [
            "human",
            "tap",
            "junit",
            "json"
          ],
          "default": "human",
          "deprecateAliases": true,
          "aliases": [
            "resultformat"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "apex:list:log": {
      "id": "apex:list:log",
      "summary": "Display a list of IDs and general information about debug logs.",
      "description": "Run this command in a project to list the IDs and general information for all debug logs in your default org.\n\nTo fetch a specific log from your org, obtain the ID from this command's output, then run the “<%= config.bin %> apex log get” command.",
      "strict": true,
      "pluginName": "@salesforce/plugin-apex",
      "pluginAlias": "@salesforce/plugin-apex",
      "pluginType": "core",
      "aliases": [
        "force:apex:log:list"
      ],
      "examples": [
        "List the IDs and information about the debug logs in your default org:\n<%= config.bin %> <%= command.id %>",
        "Similar to previous example, but use the org with the specified username:\n<%= config.bin %> <%= command.id %> --target-org me@my.org"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "apex:run:test": {
      "id": "apex:run:test",
      "summary": "Invoke Apex tests in an org.",
      "description": "Specify which tests to run by using the --class-names, --suite-names, or --tests flags. Alternatively, use the --test-level flag to run all the tests in your org, local tests, or specified tests.\n\nTo see code coverage results, use the --code-coverage flag with --result-format. The output displays a high-level summary of the test run and the code coverage values for classes in your org. If you specify human-readable result format, use the --detailed-coverage flag to see detailed coverage results for each test method run.\n\nApex tests run asynchronously by default. The command waits for 1 minute (default), or for the value of the --wait flag; if the tests have finished, the command displays the results. If the tests haven't finished by the end of the wait time, the command displays a test run ID; use the \"<%= config.bin %> apex get test --test-run-id\" command to get the results.\n\nNOTE: The testRunCoverage value (JSON and JUnit result formats) is a percentage of the covered lines and total lines from all the Apex classes evaluated by the tests in this run.",
      "strict": true,
      "pluginName": "@salesforce/plugin-apex",
      "pluginAlias": "@salesforce/plugin-apex",
      "pluginType": "core",
      "aliases": [
        "force:apex:test:run"
      ],
      "examples": [
        "Run all Apex tests and suites in your default org:\n<%= config.bin %> <%= command.id %>",
        "Run the specified Apex test classes in your default org and display results in human-readable form:\n<%= config.bin %> <%= command.id %> --class-names \"MyClassTest,MyOtherClassTest\" --result-format human",
        "Run the specified Apex test suites in your default org and include code coverage results and additional details:\n<%= config.bin %> <%= command.id %> --suite-names \"MySuite,MyOtherSuite\" --code-coverage --detailed-coverage",
        "Run the specified Apex tests in your default org and display results in human-readable output:\n<%= config.bin %> <%= command.id %> --tests \"MyClassTest.testCoolFeature,MyClassTest.testAwesomeFeature,AnotherClassTest,namespace.TheirClassTest.testThis\" --result-format human",
        "Run all tests in the org with the specified username with the specified test level; save the output to the specified directory:\n<%= config.bin %> <%= command.id %> --test-level RunLocalTests --output-dir <path to outputdir> --target-org me@my.org"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "code-coverage": {
          "name": "code-coverage",
          "type": "boolean",
          "char": "c",
          "summary": "Retrieve code coverage results.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "codecoverage"
          ]
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory in which to store test run files.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "outputdir",
            "output-directory"
          ]
        },
        "test-level": {
          "name": "test-level",
          "type": "option",
          "char": "l",
          "summary": "Level of tests to run; default is RunLocalTests.",
          "description": "Here's what the levels mean:\n\n- RunSpecifiedTests — Only the tests that you specify are run.\n- RunLocalTests — All tests in your org are run, except the ones that originate from installed managed packages.\n- RunAllTestsInOrg — All tests are in your org and in installed managed packages are run",
          "multiple": false,
          "options": [
            "RunLocalTests",
            "RunAllTestsInOrg",
            "RunSpecifiedTests"
          ],
          "deprecateAliases": true,
          "aliases": [
            "testlevel"
          ]
        },
        "class-names": {
          "name": "class-names",
          "type": "option",
          "char": "n",
          "summary": "Comma-separated list of Apex test class names to run; default is all classes.",
          "description": "If you select --class-names, you can't specify --suite-names or --tests.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "classnames"
          ]
        },
        "result-format": {
          "name": "result-format",
          "type": "option",
          "char": "r",
          "summary": "Format of the test results.",
          "multiple": false,
          "options": [
            "human",
            "tap",
            "junit",
            "json"
          ],
          "default": "human",
          "deprecateAliases": true,
          "aliases": [
            "resultformat"
          ]
        },
        "suite-names": {
          "name": "suite-names",
          "type": "option",
          "char": "s",
          "summary": "Comma-separated list of Apex test suite names to run; default is all suites.",
          "description": "If you select --suite-names, you can't specify --class-names or --tests.",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "suitenames"
          ]
        },
        "tests": {
          "name": "tests",
          "type": "option",
          "char": "t",
          "summary": "Comma-separated list of Apex test class names or IDs and, if applicable, test methods to run; default is all tests.",
          "description": "If you specify --tests, you can't specify --class-names or --suite-names",
          "multiple": false,
          "deprecateAliases": true
        },
        "wait": {
          "name": "wait",
          "type": "option",
          "char": "w",
          "summary": "Sets the streaming client socket timeout in minutes; specify a longer wait time if timeouts occur frequently.",
          "multiple": false,
          "deprecateAliases": true
        },
        "synchronous": {
          "name": "synchronous",
          "type": "boolean",
          "char": "y",
          "summary": "Runs test methods from a single Apex class synchronously; if not specified, tests are run asynchronously.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "detailed-coverage": {
          "name": "detailed-coverage",
          "type": "boolean",
          "char": "v",
          "summary": "Display detailed code coverage per test.",
          "allowNo": false,
          "dependsOn": [
            "code-coverage"
          ],
          "deprecateAliases": true,
          "aliases": [
            "detailedcoverage"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    },
    "apex:tail:log": {
      "id": "apex:tail:log",
      "summary": "Activate debug logging and display logs in the terminal.",
      "description": "You can also pipe the logs to a file.",
      "strict": true,
      "pluginName": "@salesforce/plugin-apex",
      "pluginAlias": "@salesforce/plugin-apex",
      "pluginType": "core",
      "aliases": [
        "force:apex:log:tail"
      ],
      "examples": [
        "Activate debug logging:\n<%= config.bin %> <%= command.id %>",
        "Specify a debug level:\n<%= config.bin %> <%= command.id %> --debug-level MyDebugLevel",
        "Skip the trace flag setup and apply default colors:\n<%= config.bin %> <%= command.id %> --color --skip-trace-flag"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "target-org": {
          "name": "target-org",
          "type": "option",
          "char": "o",
          "summary": "Username or alias of the target org.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "targetusername",
            "u"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        },
        "color": {
          "name": "color",
          "type": "boolean",
          "char": "c",
          "summary": "Apply default colors to noteworthy log lines.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "debug-level": {
          "name": "debug-level",
          "type": "option",
          "char": "d",
          "summary": "Debug level to set on the DEVELOPER_LOG trace flag for your user.",
          "multiple": false,
          "exclusive": [
            "skip-trace-flag"
          ],
          "deprecateAliases": true,
          "aliases": [
            "debuglevel"
          ]
        },
        "skip-trace-flag": {
          "name": "skip-trace-flag",
          "type": "boolean",
          "char": "s",
          "summary": "Skip trace flag setup. Assumes that a trace flag and debug level are fully set up.",
          "allowNo": false,
          "deprecateAliases": true,
          "aliases": [
            "skiptraceflag"
          ]
        }
      },
      "args": {},
      "hasDynamicHelp": true
    }
  }
}