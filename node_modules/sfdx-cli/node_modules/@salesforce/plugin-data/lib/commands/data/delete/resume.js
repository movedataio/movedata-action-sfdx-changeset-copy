"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const core_1 = require("@salesforce/core");
const bulkDataRequestCache_1 = require("../../../bulkDataRequestCache");
const resumeBulkCommand_1 = require("../../../resumeBulkCommand");
const bulkUtils_1 = require("../../../bulkUtils");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-data', 'bulk.delete.resume');
class DeleteResume extends resumeBulkCommand_1.ResumeBulkCommand {
    async run() {
        const { flags } = await this.parse(DeleteResume);
        const cache = await bulkDataRequestCache_1.BulkDeleteRequestCache.create();
        const resumeOptions = await cache.resolveResumeOptionsFromCache(flags['job-id'], flags['use-most-recent'], flags['target-org'], flags['api-version']);
        this.connection = resumeOptions.options.connection;
        this.operation = 'delete';
        resumeOptions.options.operation = 'delete';
        const resumeResults = await this.resume(resumeOptions, flags.wait);
        if ((0, bulkUtils_1.isBulkV2RequestDone)(resumeResults.jobInfo)) {
            await bulkDataRequestCache_1.BulkDeleteRequestCache.unset(resumeOptions.jobInfo.id);
        }
        return resumeResults;
    }
}
exports.default = DeleteResume;
DeleteResume.summary = messages.getMessage('summary');
DeleteResume.description = messages.getMessage('description');
DeleteResume.examples = messages.getMessages('examples');
DeleteResume.deprecateAliases = true;
//# sourceMappingURL=resume.js.map