"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.waitOrTimeout = exports.validateSobjectType = exports.transformResults = exports.didBulkV2RequestJobFail = exports.isBulkV2RequestDone = exports.POLL_FREQUENCY_MS = void 0;
const core_1 = require("@salesforce/core");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-data', 'messages');
exports.POLL_FREQUENCY_MS = 5000;
const isBulkV2RequestDone = (jobInfo) => ['Aborted', 'Failed', 'JobComplete'].includes(jobInfo.state);
exports.isBulkV2RequestDone = isBulkV2RequestDone;
const didBulkV2RequestJobFail = (jobInfo) => ['Aborted', 'Failed'].includes(jobInfo.state);
exports.didBulkV2RequestJobFail = didBulkV2RequestJobFail;
const transformResults = (results) => ({
    successfulResults: results.successfulResults.map((record) => record),
    failedResults: results.failedResults.map((record) => record),
    unprocessedRecords: results.unprocessedRecords.map((record) => record),
});
exports.transformResults = transformResults;
const validateSobjectType = async (sobjectType, connection) => {
    try {
        await connection.sobject(sobjectType).describe();
    }
    catch (e) {
        throw new Error(messages.getMessage('invalidSobject', [sobjectType, e.message]));
    }
};
exports.validateSobjectType = validateSobjectType;
const waitOrTimeout = async (job, wait) => {
    if (wait > 0) {
        let waitCountDown = wait;
        const progress = setInterval(() => {
            const remainingTime = (waitCountDown -= exports.POLL_FREQUENCY_MS);
            job.emit('jobProgress', { remainingTime, stage: 'polling' });
        }, exports.POLL_FREQUENCY_MS);
        const timeout = setTimeout(() => {
            clearInterval(progress);
            job.emit('jobTimeout');
        }, wait ?? 0);
        try {
            await job.poll(exports.POLL_FREQUENCY_MS, wait);
        }
        finally {
            clearInterval(progress);
            clearTimeout(timeout);
        }
    }
};
exports.waitOrTimeout = waitOrTimeout;
//# sourceMappingURL=bulkUtils.js.map