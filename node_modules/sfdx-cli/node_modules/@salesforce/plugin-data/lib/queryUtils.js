"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformBulkResults = exports.displayResults = void 0;
const dataSoqlQueryTypes_1 = require("./dataSoqlQueryTypes");
const reporters_1 = require("./reporters");
const displayResults = (queryResult, resultFormat) => {
    let reporter;
    switch (resultFormat) {
        case 'human':
            reporter = new reporters_1.HumanReporter(queryResult, queryResult.columns);
            break;
        case 'json':
            reporter = new reporters_1.JsonReporter(queryResult, queryResult.columns);
            break;
        case 'csv':
            reporter = new reporters_1.CsvReporter(queryResult, queryResult.columns);
            break;
    }
    // delegate to selected reporter
    reporter.display();
};
exports.displayResults = displayResults;
/**
 * transforms Bulk 2.0 results to match the SOQL query results
 *
 * @param results results object
 * @param query query string
 */
const transformBulkResults = (results, query) => {
    /*
      bulk queries return a different payload, it's a [{column: data}, {column: data}]
      so we just need to grab the first object, find the keys (columns) and create the columns
       */
    const columns = Object.keys(results[0] ?? {}).map((name) => ({
        fieldType: dataSoqlQueryTypes_1.FieldType.field,
        name,
    }));
    return {
        columns,
        result: { done: true, records: results, totalSize: results.length },
        query,
    };
};
exports.transformBulkResults = transformBulkResults;
//# sourceMappingURL=queryUtils.js.map