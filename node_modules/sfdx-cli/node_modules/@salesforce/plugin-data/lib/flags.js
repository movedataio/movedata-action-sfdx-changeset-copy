"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resultFormatFlag = exports.orgFlags = exports.perflogFlag = void 0;
/*
 * Copyright (c) 2020, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const core_1 = require("@salesforce/core");
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-data', 'messages');
exports.perflogFlag = sf_plugins_core_1.Flags.boolean({
    summary: messages.getMessage('perfLogLevelOption'),
    description: messages.getMessage('perfLogLevelOptionLong'),
    hidden: true,
    deprecated: {
        version: '57',
    },
});
exports.orgFlags = {
    'target-org': { ...sf_plugins_core_1.requiredOrgFlagWithDeprecations, summary: messages.getMessage('flags.targetOrg.summary') },
    'api-version': sf_plugins_core_1.orgApiVersionFlagWithDeprecations,
    loglevel: sf_plugins_core_1.loglevel,
};
exports.resultFormatFlag = sf_plugins_core_1.Flags.string({
    char: 'r',
    summary: messages.getMessage('flags.resultFormat'),
    options: ['human', 'json', 'csv'],
    default: 'human',
    aliases: ['resultformat'],
    deprecateAliases: true,
});
//# sourceMappingURL=flags.js.map