"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.internalFlag = exports.outputDirFlagLightning = exports.outputDirFlag = void 0;
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
const core_1 = require("@salesforce/core");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-templates', 'messages');
const lightningMessages = core_1.Messages.loadMessages('@salesforce/plugin-templates', 'lightning');
exports.outputDirFlag = sf_plugins_core_1.Flags.string({
    char: 'd',
    summary: messages.getMessage('flags.outputdir'),
    description: messages.getMessage('flags.outputdir.description'),
    default: '.',
    deprecateAliases: true,
    aliases: ['outputdir'],
});
exports.outputDirFlagLightning = sf_plugins_core_1.Flags.string({
    char: 'd',
    summary: messages.getMessage('flags.outputdir'),
    description: messages.getMessage('flags.outputdir.description'),
    default: '.',
    deprecateAliases: true,
    aliases: ['outputdir'],
});
exports.internalFlag = sf_plugins_core_1.Flags.boolean({
    char: 'i',
    summary: lightningMessages.getMessage('flags.internal'),
    hidden: true,
});
//# sourceMappingURL=flags.js.map