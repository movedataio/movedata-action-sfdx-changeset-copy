"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const sf_plugins_core_1 = require("@salesforce/sf-plugins-core");
const projectGenerator_1 = require("@salesforce/templates/lib/generators/projectGenerator");
const core_1 = require("@salesforce/core");
const templateCommand_1 = require("../../utils/templateCommand");
const flags_1 = require("../../utils/flags");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('@salesforce/plugin-templates', 'project');
class Project extends sf_plugins_core_1.SfCommand {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const { flags } = yield this.parse(Project);
            flags.ns = flags.namespace;
            const flagsAsOptions = {
                projectname: flags.name,
                outputdir: flags['output-dir'],
                manifest: flags.manifest,
                loginurl: flags['login-url'],
                template: flags.template,
                // namespace is a reserved keyword for the generator
                ns: flags.namespace,
                defaultpackagedir: flags['default-package-dir'],
            };
            return (0, templateCommand_1.runGenerator)({
                generator: projectGenerator_1.default,
                opts: flagsAsOptions,
                ux: new sf_plugins_core_1.Ux({ jsonEnabled: this.jsonEnabled() }),
                templates: (0, templateCommand_1.getCustomTemplates)(this.configAggregator),
            });
        });
    }
}
exports.default = Project;
Project.summary = messages.getMessage('summary');
Project.description = messages.getMessage('description');
Project.examples = messages.getMessages('examples');
Project.aliases = ['force:project:create'];
Project.deprecateAliases = true;
Project.flags = {
    name: sf_plugins_core_1.Flags.string({
        char: 'n',
        summary: messages.getMessage('flags.name'),
        description: messages.getMessage('flags.name.description'),
        required: true,
        aliases: ['projectname'],
        deprecateAliases: true,
    }),
    template: sf_plugins_core_1.Flags.string({
        char: 't',
        summary: messages.getMessage('flags.template'),
        description: messages.getMessage('flags.template.description'),
        default: 'standard',
        options: ['standard', 'empty', 'analytics'],
    }),
    'output-dir': flags_1.outputDirFlag,
    namespace: sf_plugins_core_1.Flags.string({
        char: 's',
        summary: messages.getMessage('flags.namespace'),
        default: '',
    }),
    'default-package-dir': sf_plugins_core_1.Flags.string({
        char: 'p',
        summary: messages.getMessage('flags.packagedir'),
        description: messages.getMessage('flags.packagedir.description'),
        default: 'force-app',
        aliases: ['defaultpackagedir'],
        deprecateAliases: true,
    }),
    manifest: sf_plugins_core_1.Flags.boolean({
        char: 'x',
        summary: messages.getMessage('flags.manifest'),
        description: messages.getMessage('flags.manifest.description'),
    }),
    'login-url': sf_plugins_core_1.Flags.string({
        char: 'l',
        summary: messages.getMessage('flags.loginurl'),
        description: messages.getMessage('flags.loginurl.description'),
        default: 'https://login.salesforce.com',
        hidden: true,
        aliases: ['loginurl'],
        deprecateAliases: true,
    }),
    loglevel: sf_plugins_core_1.loglevel,
};
//# sourceMappingURL=generate.js.map