{
  "version": "55.4.7",
  "commands": {
    "project:generate": {
      "id": "project:generate",
      "summary": "Generate a Salesforce DX project.",
      "description": "A Salesforce DX project has a specific structure and a configuration file (sfdx-project.json) that identifies the directory as a Salesforce DX project. This command generates the necessary configuration files and directories to get you started.\n\nBy default, the generated sfdx-project.json file sets the sourceApiVersion property to the default API version currently used by Salesforce CLI. To specify a different version, set the apiVersion configuration variable. For example: \"sf config set apiVersion=57.0 --global\".",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:project:create"
      ],
      "examples": [
        "Generate a project called \"mywork\":\n<%= config.bin %> <%= command.id %> --name mywork",
        "Similar to previous example, but generate the files in a directory called \"myapp\":\n<%= config.bin %> <%= command.id %> --name mywork --default-package-dir myapp",
        "Similar to prevoius example, but also generate a default package.xml manifest file:\n<%= config.bin %> <%= command.id %> --name mywork --default-package-dir myapp --manifest",
        "Generate a project with the minimum files and directories:\n<%= config.bin %> <%= command.id %> --name mywork --template empty"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated project.",
          "description": "Generates a project directory with this name; any valid directory name is accepted. Also sets the \"name\" property in the sfdx-project.json file to this name.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "projectname"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for project creation.",
          "description": "The template determines the sample configuration files and directories that this command generates. For example, the empty template provides these files and directory to get you started.\n\n- .forceignore\n- config/project-scratch-def.json\n- sfdx-project.json\n- package.json\n- force-app (basic source directory structure)\n\nThe standard template provides a complete force-app directory structure so you know where to put your source. It also provides additional files and scripts, especially useful when using Salesforce Extensions for VS Code. For example:\n\n- .gitignore: Use Git for version control.\n- .prettierrc and .prettierignore: Use Prettier to format your Aura components.\n- .vscode/extensions.json: When launched, Visual Studio Code, prompts you to install the recommended extensions for your project.\n- .vscode/launch.json: Configures Replay Debugger.\n- .vscode/settings.json: Additional configuration settings.\n\nThe analytics template provides similar files and the force-app/main/default/waveTemplates directory.",
          "multiple": false,
          "options": [
            "standard",
            "empty",
            "analytics"
          ],
          "default": "standard",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "namespace": {
          "name": "namespace",
          "type": "option",
          "char": "s",
          "summary": "Namespace associated with this project and any connected scratch orgs.",
          "multiple": false,
          "default": "",
          "deprecateAliases": true
        },
        "default-package-dir": {
          "name": "default-package-dir",
          "type": "option",
          "char": "p",
          "summary": "Default package directory name.",
          "description": "Metadata items such as classes and Lightning bundles are placed inside this folder.",
          "multiple": false,
          "default": "force-app",
          "deprecateAliases": true,
          "aliases": [
            "defaultpackagedir"
          ]
        },
        "manifest": {
          "name": "manifest",
          "type": "boolean",
          "char": "x",
          "summary": "Generate a manifest (package.xml) for change-set based development.",
          "description": "Generates a default manifest (package.xml) for fetching Apex, Visualforce, Lightning components, and static resources.",
          "allowNo": false,
          "deprecateAliases": true
        },
        "login-url": {
          "name": "login-url",
          "type": "option",
          "char": "l",
          "summary": "Salesforce instance login URL.",
          "description": "Normally defaults to https://login.salesforce.com.",
          "hidden": true,
          "multiple": false,
          "default": "https://login.salesforce.com",
          "deprecateAliases": true,
          "aliases": [
            "loginurl"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "static-resource:generate": {
      "id": "static-resource:generate",
      "summary": "Generate a static resource.",
      "description": "Generates the metadata resource file in the specified directory or the current working directory. Static resource files must be contained in a parent directory called \"staticresources\" in your package directory. Either run this command from an existing directory of this name, or use the --output-dir flag to create one or point to an existing one.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:staticresource:create"
      ],
      "examples": [
        "Generate the metadata file for a static resource called MyResource in the current directory:\n<%= config.bin %> <%= command.id %> --name MyResource",
        "Similar to previous example, but specifies a MIME type of application/json:\n<%= config.bin %> <%= command.id %> --name MyResource --type application/json",
        "Generate the resource file in the \"force-app/main/default/staticresources\" directory:\n<%= config.bin %> <%= command.id %> --name MyResource --output-dir force-app/main/default/staticresources"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated static resource.",
          "description": "This name can contain only underscores and alphanumeric characters, and must be unique in your org. It must begin with a letter, not include spaces, not end with an underscore, and not contain two consecutive underscores.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "resourcename"
          ]
        },
        "type": {
          "name": "type",
          "type": "option",
          "summary": "Content type (mime type) of the generated static resource.",
          "description": "Must be a valid MIME type such as application/json, application/javascript, application/zip, text/plain, text/css, etc.",
          "multiple": false,
          "default": "application/zip",
          "deprecateAliases": true,
          "aliases": [
            "contenttype"
          ]
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "analytics:generate:template": {
      "id": "analytics:generate:template",
      "summary": "Generate a simple Analytics template.",
      "description": "The metadata files associated with the Analytics template must be contained in a parent directory called \"waveTemplates\" in your package directory. Either run this command from an existing directory of this name, or use the --output-dir flag to generate one or point to an existing one.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:analytics:template:create"
      ],
      "examples": [
        "Generate the metadata files for a simple Analytics template file called myTemplate in the force-app/main/default/waveTemplates directory:\n<%= config.bin %> <%= command.id %> --name myTemplate --output-dir force-app/main/default/waveTemplates"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the Analytics template.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "templatename"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "apex:generate:class": {
      "id": "apex:generate:class",
      "summary": "Generate an Apex class.",
      "description": "Generates the Apex *.cls file and associated metadata file. These files must be contained in a parent directory called \"classes\" in your package directory. Either run this command from an existing directory of this name, or use the --output-dir flag to generate one or point to an existing one.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:apex:class:create"
      ],
      "examples": [
        "Generate two metadata files associated with the MyClass Apex class (MyClass.cls and MyClass.cls-meta.xml) in the current directory:\n<%= config.bin %> <%= command.id %> --name MyClass",
        "Similar to previous example, but generates the files in the \"force-app/main/default/classes\" directory:\n<%= config.bin %> <%= command.id %> --name MyClass --output-dir force-app/main/default/classes"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Apex class.",
          "description": "The name can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "classname"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "multiple": false,
          "options": [
            "ApexException",
            "ApexUnitTest",
            "DefaultApexClass",
            "InboundEmailService"
          ],
          "default": "DefaultApexClass",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "apex:generate:trigger": {
      "id": "apex:generate:trigger",
      "summary": "Generate an Apex trigger.",
      "description": "Generates the Apex trigger *.trigger file and associated metadata file. These files must be contained in a parent directory called \"triggers\" in your package directory. Either run this command from an existing directory of this name, or use the --output-dir flag to generate one or point to an existing one. \n\nIf you don't specify the --sobject flag, the .trigger file contains the generic placeholder SOBJECT; replace it with the Salesforce object you want to generate a trigger for. If you don't specify --event, \"before insert\" is used.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:apex:trigger:create"
      ],
      "examples": [
        "Generate two files associated with the MyTrigger Apex trigger (MyTrigger.trigger and MyTrigger.trigger-meta.xml) in the current directory:\n<%= config.bin %> <%= command.id %> --name MyTrigger",
        "Similar to the previous example, but generate the files in the \"force-app/main/default/triggers\" directory:\n<%= config.bin %> <%= command.id %> --name MyTrigger --output-dir force-app/main/default/triggers",
        "Generate files for a trigger that fires on the Account object before and after an insert:\n<%= config.bin %> <%= command.id %> --name MyTrigger --sobject Account --event \"before insert,after insert\""
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Apex trigger",
          "description": "The name can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "triggername"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "multiple": false,
          "options": [
            "ApexTrigger"
          ],
          "default": "ApexTrigger",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "sobject": {
          "name": "sobject",
          "type": "option",
          "char": "s",
          "summary": "Salesforce object to generate a trigger on.",
          "multiple": false,
          "default": "SOBJECT",
          "deprecateAliases": true
        },
        "event": {
          "name": "event",
          "type": "option",
          "char": "e",
          "summary": "Events that fire the trigger.",
          "multiple": true,
          "options": [
            "before insert",
            "before update",
            "before delete",
            "after insert",
            "after update",
            "after delete",
            "after undelete"
          ],
          "default": [
            "before insert"
          ],
          "deprecateAliases": true,
          "aliases": [
            "triggerevents"
          ],
          "delimiter": ","
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "lightning:generate:app": {
      "id": "lightning:generate:app",
      "summary": "Generate a Lightning App.",
      "description": "Generates a Lightning App bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:lightning:app:create"
      ],
      "examples": [
        "Generate the metadata files for a Lightning app bundle called \"myapp\" in the current directory:\n<%= config.bin %> <%= command.id %> --name myapp",
        "Similar to the previous example, but generate the files in the \"force-app/main/default/aura\" directory:\n<%= config.bin %> <%= command.id %> --name myapp --output-dir force-app/main/default/aura"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Lightning App.",
          "description": "The name can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "appname"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "multiple": false,
          "options": [
            "DefaultLightningApp"
          ],
          "default": "DefaultLightningApp",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "internal": {
          "name": "internal",
          "type": "boolean",
          "char": "i",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "lightning:generate:component": {
      "id": "lightning:generate:component",
      "summary": "Generate a bundle for an Aura component or a Lightning web component.",
      "description": "Generates the bundle in the specified directory or the current working directory. The bundle consists of multiple files in a directory with the designated name.  Lightning web components are contained in the directory with name \"lwc\", Aura components in \"aura\".\n\nTo generate a Lightning web component, pass \"--type lwc\" to the command. If you don’t specify --type, Salesforce CLI generates an Aura component by default.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:lightning:component:create"
      ],
      "examples": [
        "Generate the metadata files for an Aura component bundle in the current directory:\n<%= config.bin %> <%= command.id %> --name mycomponent",
        "Generate a Lightning web component bundle in the current directory:\n<%= config.bin %> <%= command.id %> --name mycomponent --type lwc",
        "Generate an Aura component bundle in the \"force-app/main/default/aura\" directory:\n<%= config.bin %> <%= command.id %> --name mycomponent --output-dir force-app/main/default/aura",
        "Generate a Lightning web component bundle in the \"force-app/main/default/lwc\" directory:\n<%= config.bin %> <%= command.id %> --name mycomponent --type lwc --output-dir force-app/main/default/lwc"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Lightning Component.",
          "description": "The name can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "componentname"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "multiple": false,
          "options": [
            "default",
            "analyticsDashboard",
            "analyticsDashboardWithStep"
          ],
          "default": "default",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "type": {
          "name": "type",
          "type": "option",
          "summary": "Type of the component bundle.",
          "multiple": false,
          "options": [
            "aura",
            "lwc"
          ],
          "default": "aura",
          "deprecateAliases": true
        },
        "internal": {
          "name": "internal",
          "type": "boolean",
          "char": "i",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "lightning:generate:event": {
      "id": "lightning:generate:event",
      "summary": "Generate a Lightning Event.",
      "description": "Generates a Lightning Event bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:lightning:event:create"
      ],
      "examples": [
        "Generate the metadata files for a Lightning event bundle called \"myevent\" in the current directory:\n<%= config.bin %> <%= command.id %> --name myevent",
        "Similar to previous example, but generate the files in the \"force-app/main/default/aura\" directory:\n<%= config.bin %> <%= command.id %> --name myevent --output-dir force-app/main/default/aura"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Lightning Event.",
          "description": "The name can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "eventname"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "multiple": false,
          "options": [
            "DefaultLightningEvt"
          ],
          "default": "DefaultLightningEvt",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "internal": {
          "name": "internal",
          "type": "boolean",
          "char": "i",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "lightning:generate:interface": {
      "id": "lightning:generate:interface",
      "summary": "Generate a Lightning Interface.",
      "description": "Generates a Lightning Interface bundle in the specified directory or the current working directory. The bundle consists of multiple files in a folder with the designated name.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:lightning:interface:create"
      ],
      "examples": [
        "Generate the metadata files for a Lightning interface bundle called \"myinterface\" in the current directory:\n<%= config.bin %> <%= command.id %> --name myinterface",
        "Similar to the previous example but generate the files in the \"force-app/main/default/aura\" directory:\n<%= config.bin %> <%= command.id %> --name myinterface --output-dir force-app/main/default/aura"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Lightning Interface.",
          "description": "The name can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "interfacename"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "multiple": false,
          "options": [
            "DefaultLightningIntf"
          ],
          "default": "DefaultLightningIntf",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "internal": {
          "name": "internal",
          "type": "boolean",
          "char": "i",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "lightning:generate:test": {
      "id": "lightning:generate:test",
      "summary": "Generate a Lightning test.",
      "description": "Generates the test in the specified directory or the current working directory. The .resource file and associated metadata file are generated.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:lightning:test:create"
      ],
      "examples": [
        "Generate the metadata files for the Lightning test called MyLightningTest in the current directory:\n<%= config.bin %> <%= command.id %> --name MyLightningTest",
        "Similar to the previous example but generate the files in the \"force-app/main/default/lightningTests\" directory:\n<%= config.bin %> <%= command.id %> --name MyLightningTest --output-dir force-app/main/default/lightningTests"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Lightning Test.",
          "description": "Name of the new Lightning test; can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "testname"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "multiple": false,
          "options": [
            "DefaultLightningTest"
          ],
          "default": "DefaultLightningTest",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "internal": {
          "name": "internal",
          "type": "boolean",
          "char": "i",
          "summary": "Generate lightning bundles without creating a -meta.xml file.",
          "hidden": true,
          "allowNo": false,
          "deprecateAliases": true
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "visualforce:generate:component": {
      "id": "visualforce:generate:component",
      "summary": "Generate a Visualforce Component.",
      "description": "The command generates the .Component file and associated metadata file in the specified directory or the current working directory by default.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:visualforce:component:create"
      ],
      "examples": [
        "Generate the metadata files for a Visualforce component in the current directory:\n<%= config.bin %> <%= command.id %> --name mycomponent --label mylabel",
        "Similar to previous example, but generate the files in the directory \"force-app/main/default/components\":\n<%= config.bin %> <%= command.id %> --name mycomponent --label mylabel --output-dir components"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Visualforce Component.",
          "description": "The name can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "componentname"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "multiple": false,
          "options": [
            "DefaultVFComponent"
          ],
          "default": "DefaultVFComponent",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "label": {
          "name": "label",
          "type": "option",
          "char": "l",
          "summary": "Visualforce Component label.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    },
    "visualforce:generate:page": {
      "id": "visualforce:generate:page",
      "summary": "Generate a Visualforce Page.",
      "description": "The command generates the .Page file and associated metadata file in the specified directory or the current working directory by default.",
      "strict": true,
      "pluginName": "@salesforce/plugin-templates",
      "pluginAlias": "@salesforce/plugin-templates",
      "pluginType": "core",
      "aliases": [
        "force:visualforce:page:create"
      ],
      "examples": [
        "Generate the metadata files for a Visualforce page in the current directory:\n<%= config.bin %> <%= command.id %> --name mypage --label mylabel",
        "Similar to previous example, but generate the files in the directory \"force-app/main/default/pages\":\n<%= config.bin %> <%= command.id %> --name mypage --label mylabel --output-dir pages"
      ],
      "deprecateAliases": true,
      "flags": {
        "json": {
          "name": "json",
          "type": "boolean",
          "description": "Format output as json.",
          "helpGroup": "GLOBAL",
          "allowNo": false,
          "deprecateAliases": true
        },
        "name": {
          "name": "name",
          "type": "option",
          "char": "n",
          "summary": "Name of the generated Visualforce Page.",
          "description": "The name can be up to 40 characters and must start with a letter.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "pagename"
          ]
        },
        "template": {
          "name": "template",
          "type": "option",
          "char": "t",
          "summary": "Template to use for file creation.",
          "description": "Supplied parameter values or default values are filled into a copy of the template.",
          "hidden": true,
          "multiple": false,
          "options": [
            "DefaultVFPage"
          ],
          "default": "DefaultVFPage",
          "deprecateAliases": true
        },
        "output-dir": {
          "name": "output-dir",
          "type": "option",
          "char": "d",
          "summary": "Directory for saving the created files.",
          "description": "The location can be an absolute path or relative to the current working directory. The default is the current directory.",
          "multiple": false,
          "default": ".",
          "deprecateAliases": true,
          "aliases": [
            "outputdir"
          ]
        },
        "api-version": {
          "name": "api-version",
          "type": "option",
          "description": "Override the api version used for api requests made by this command",
          "multiple": false,
          "deprecateAliases": true,
          "aliases": [
            "apiversion"
          ]
        },
        "label": {
          "name": "label",
          "type": "option",
          "char": "l",
          "summary": "Visualforce Page label.",
          "required": true,
          "multiple": false,
          "deprecateAliases": true
        },
        "loglevel": {
          "name": "loglevel",
          "type": "option",
          "hidden": true,
          "multiple": false,
          "deprecated": {
            "message": "The loglevel flag is no longer in use on this command. You may use it without error, but it will be ignored.\nSet the log level using the `SFDX_LOG_LEVEL` environment variable."
          },
          "deprecateAliases": true
        }
      },
      "args": {}
    }
  }
}